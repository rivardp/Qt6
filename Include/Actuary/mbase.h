// mbase.h   Version 2.0  February 12, 2003
//                   2.1  July 30, 2008 - Rewritten to use PString class
//					 2.2  August 4, 2008 - Add projection capability
//					 3.0  March 1, 2009 - Eliminate shorts
//					 3.1  March 15, 2009 - Add RP2000 tables
//					 3.2  March 22, 2009 - Add methods to obtain table descriptions
//					 4.0  April 27, 2015 - Added CPM tables and Custom Blue Collar Blend
//										 - Add two dimensional improvement scale capability
//										 - Drop GAM71 and GAM83
//					 5.0  Nov 16, 2019   - Add LAPP Custom CPM table
//

#ifndef MBASE_H
#define MBASE_H

#ifndef SEX_H
#include "../Actuary/sex.h"
#endif

#ifndef PVector_H
#include "../Actuary/PVector.h"
#endif

#ifndef ERRORFLAG_H
#include "../Actuary/errorFlag.h"
#endif

#ifndef DATE_H
#include "../Actuary/date.h"
#endif

#ifndef PSTRING_H
#include "../Penser/PString.h"
#endif

static const double mortalityRates[22][121] = {
	/*
	// GAM71 Male
	{0.000000,0.000000,0.000000,0.000000,0.000000,0.000456,0.000424,0.000403,0.000392,0.000389,
	0.000390,0.000397,0.000405,0.000413,0.000422,0.000433,0.000444,0.000457,0.000471,0.000486,
	0.000503,0.000522,0.000544,0.000566,0.000591,0.000619,0.000650,0.000684,0.000722,0.000763,
	0.000809,0.000860,0.000916,0.000978,0.001046,0.001122,0.001204,0.001295,0.001397,0.001509,
	0.001633,0.001789,0.002000,0.002260,0.002569,0.002922,0.003318,0.003754,0.004228,0.004740,
    0.005285,0.005867,0.006480,0.007127,0.007806,0.008519,0.009262,0.010040,0.010890,0.011920,
	0.013120,0.014440,0.015863,0.017413,0.019185,0.021260,0.023643,0.026316,0.029188,0.032435,
	0.036106,0.040008,0.043827,0.047489,0.051221,0.055293,0.060068,0.065924,0.072595,0.079692,
	0.087431,0.095445,0.103691,0.112303,0.121116,0.130102,0.139315,0.148714,0.158486,0.168709,
	0.179452,0.190489,0.201681,0.212986,0.226535,0.241164,0.256204,0.272480,0.290163,0.309125,
	0.329825,0.352455,0.377220,0.406205,0.441497,0.485182,0.539343,0.606069,0.687444,0.785555,
	1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
	1.000000},
	// GAM71 Female
	{0.000000,0.000000,0.000000,0.000000,0.000000,0.000234,0.000193,0.000162,0.000143,0.000134,
	0.000132,0.000143,0.000155,0.000167,0.000180,0.000193,0.000205,0.000218,0.000231,0.000245,
	0.000260,0.000275,0.000292,0.000309,0.000327,0.000347,0.000368,0.000390,0.000414,0.000440,
	0.000469,0.000499,0.000533,0.000569,0.000608,0.000651,0.000698,0.000750,0.000807,0.000869,
	0.000938,0.001013,0.001094,0.001186,0.001286,0.001397,0.001519,0.001654,0.001802,0.001967,
	0.002151,0.002324,0.002520,0.002738,0.002982,0.003256,0.003574,0.003948,0.004388,0.004901,
	0.005489,0.006156,0.006898,0.007712,0.008608,0.009563,0.010565,0.011621,0.012877,0.014461,
	0.016477,0.019000,0.021911,0.025112,0.028632,0.032385,0.036408,0.040769,0.045472,0.050616,
	0.056085,0.061853,0.067936,0.074351,0.081501,0.089179,0.097468,0.106452,0.116226,0.126893,
	0.138577,0.151192,0.165077,0.180401,0.197349,0.216129,0.236970,0.258059,0.280237,0.304679,
	0.331630,0.361361,0.394167,0.430366,0.471522,0.519196,0.574950,0.640345,0.716944,0.806309,
	1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
	1.000000},
        */
	// GAM83 Male
	{0.000000,0.000000,0.000000,0.000000,0.000000,0.000342,0.000318,0.000302,0.000294,0.000292,
	0.000293,0.000298,0.000304,0.000310,0.000317,0.000325,0.000333,0.000343,0.000353,0.000365,
	0.000377,0.000392,0.000408,0.000424,0.000444,0.000464,0.000488,0.000513,0.000542,0.000572,
	0.000607,0.000645,0.000687,0.000734,0.000785,0.000860,0.000907,0.000966,0.001039,0.001128,
	0.001238,0.001370,0.001527,0.001715,0.001932,0.002183,0.002471,0.002790,0.003138,0.003513,
	0.003909,0.004324,0.004755,0.005200,0.005660,0.006131,0.006618,0.007139,0.007719,0.008384,
	0.009158,0.010064,0.011133,0.012391,0.013868,0.015592,0.017579,0.019804,0.022229,0.024817,
	0.027530,0.030354,0.033370,0.036680,0.040388,0.044597,0.049388,0.054758,0.060678,0.067125,
	0.074070,0.081484,0.089320,0.097525,0.106047,0.114836,0.124170,0.133870,0.144073,0.154859,
	0.166307,0.178214,0.190460,0.203007,0.217904,0.234086,0.248436,0.263954,0.280803,0.299154,
	0.319185,0.341086,0.365052,0.393102,0.427255,0.469531,0.521945,0.586518,0.665268,0.760215,
	1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
	1.000000},
	// GAM83 Female
	{0.000000,0.000000,0.000000,0.000000,0.000000,0.000171,0.000140,0.000118,0.000104,0.000097,
	0.000096,0.000104,0.000113,0.000122,0.000131,0.000140,0.000149,0.000159,0.000168,0.000179,
	0.000189,0.000201,0.000212,0.000225,0.000239,0.000253,0.000268,0.000284,0.000302,0.000320,
	0.000342,0.000364,0.000388,0.000414,0.000443,0.000476,0.000502,0.000536,0.000573,0.000617,
	0.000665,0.000716,0.000775,0.000842,0.000919,0.001010,0.001117,0.001237,0.001366,0.001505,
	0.001647,0.001793,0.001949,0.002120,0.002315,0.002541,0.002803,0.003103,0.003443,0.003821,
	0.004241,0.004703,0.005210,0.005769,0.006386,0.007064,0.007817,0.008681,0.009702,0.010922,
	0.012385,0.014128,0.016160,0.018481,0.021092,0.023992,0.027185,0.030672,0.034459,0.038549,
	0.042945,0.047655,0.052691,0.058071,0.063807,0.069918,0.076570,0.083870,0.091935,0.101354,
	0.111750,0.123076,0.135630,0.149577,0.165103,0.182419,0.201757,0.222044,0.243899,0.268185,
	0.295187,0.325225,0.358897,0.395843,0.438360,0.487816,0.545886,0.614309,0.694885,0.789474,
	1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,
	1.000000},	
	// UP94 (Male)
    { 0.000000,0.000637, 0.000430, 0.000357, 0.000278, 0.000255, 0.000244, 0.000234, 0.000216, 0.000209,
	0.000212, 0.000223, 0.000243, 0.000275, 0.000320, 0.000371, 0.000421, 0.000463, 0.000495, 0.000521,
	0.000545, 0.000570, 0.000598, 0.000633, 0.000671, 0.000711, 0.000749, 0.000782, 0.000811, 0.000838,
	0.000862, 0.000883, 0.000902, 0.000912, 0.000913, 0.000915, 0.000927, 0.000958, 0.001010, 0.001075,
	0.001153, 0.001243, 0.001346, 0.001454, 0.001568, 0.001697, 0.001852, 0.002042, 0.002260, 0.002501,
	0.002773, 0.003088, 0.003455, 0.003854, 0.004278, 0.004758, 0.005322, 0.006001, 0.006774, 0.007623,
	0.008576, 0.009663, 0.010911, 0.012335, 0.013914, 0.015629, 0.017462, 0.019391, 0.021354, 0.023364,
	0.025516, 0.027905, 0.030625, 0.033549, 0.036614, 0.040012, 0.043933, 0.048570, 0.053991, 0.060066,
	0.066696, 0.073780, 0.081217, 0.088721, 0.096358, 0.104559, 0.113755, 0.124377, 0.136537, 0.149949,
	0.164442, 0.179849, 0.196001, 0.213325, 0.231936, 0.251189, 0.270441, 0.289048, 0.306750, 0.323976,
	0.341116, 0.358560, 0.376699, 0.396884, 0.418855, 0.440585, 0.460043, 0.475200, 0.485670, 0.492807,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// UP94 (Female)
	{ 0.000000, 0.000571, 0.000372, 0.000278, 0.000208, 0.000188, 0.000176, 0.000165, 0.000147, 0.000140,
	0.000141, 0.000148, 0.000159, 0.000177, 0.000203, 0.000233, 0.000261, 0.000281, 0.000293, 0.000301,
	0.000305, 0.000308, 0.000311, 0.000313, 0.000313, 0.000313, 0.000316, 0.000324, 0.000338, 0.000356,
	0.000377, 0.000401, 0.000427, 0.000454, 0.000482, 0.000514, 0.000550, 0.000593, 0.000643, 0.000701,
	0.000763, 0.000826, 0.000888, 0.000943, 0.000992, 0.001046, 0.001111, 0.001196, 0.001297, 0.001408,
	0.001536, 0.001686, 0.001864, 0.002051, 0.002241, 0.002466, 0.002755, 0.003139, 0.003612, 0.004154,
	0.004773, 0.005476, 0.006271, 0.007179, 0.008194, 0.009286, 0.010423, 0.011574, 0.012648, 0.013665,
	0.014763, 0.016079, 0.017748, 0.019724, 0.021915, 0.024393, 0.027231, 0.030501, 0.034115, 0.038024,
	0.042361, 0.047260, 0.052853, 0.058986, 0.065569, 0.072836, 0.081018, 0.090348, 0.100882, 0.112467,
	0.125016, 0.138442, 0.152660, 0.167668, 0.183524, 0.200229, 0.217783, 0.236188, 0.255605, 0.276035,
	0.297233, 0.318956, 0.340960, 0.364586, 0.389996, 0.415180, 0.438126, 0.456824, 0.471493, 0.483473,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// GA94 Male
	{ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
	0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000345, 0.000391, 0.000430, 0.000460, 0.000484,
	0.000507, 0.000530, 0.000556, 0.000589, 0.000624, 0.000661, 0.000696, 0.000727, 0.000754, 0.000779,
	0.000801, 0.000821, 0.000839, 0.000848, 0.000849, 0.000851, 0.000862, 0.000891, 0.000939, 0.000999,
	0.001072, 0.001156, 0.001252, 0.001352, 0.001458, 0.001578, 0.001722, 0.001899, 0.002102, 0.002326,
	0.002579, 0.002872, 0.003213, 0.003584, 0.003979, 0.004425, 0.004949, 0.005581, 0.006300, 0.007090,
	0.007976, 0.008986, 0.010147, 0.011471, 0.012940, 0.014535, 0.016239, 0.018034, 0.019859, 0.021729,
	0.023730, 0.025951, 0.028481, 0.031201, 0.034051, 0.037211, 0.040858, 0.045171, 0.050211, 0.055861,
	0.062027, 0.068615, 0.075532, 0.082510, 0.089613, 0.097240, 0.105792, 0.115671, 0.126980, 0.139452,
	0.152931, 0.167260, 0.182281, 0.198392, 0.215700, 0.233606, 0.251510, 0.268815, 0.285277, 0.301298,
	0.317238, 0.333461, 0.350330, 0.368542, 0.387855, 0.407224, 0.425599, 0.441935, 0.457553, 0.473150,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// GA94 Female
	{ 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
	0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000216, 0.000242, 0.000262, 0.000273, 0.000280,
	0.000284, 0.000286, 0.000289, 0.000292, 0.000291, 0.000291, 0.000294, 0.000302, 0.000314, 0.000331,
	0.000351, 0.000373, 0.000397, 0.000422, 0.000449, 0.000478, 0.000512, 0.000551, 0.000598, 0.000652,
	0.000709, 0.000768, 0.000825, 0.000877, 0.000923, 0.000973, 0.001033, 0.001112, 0.001206, 0.001310,
	0.001428, 0.001568, 0.001734, 0.001907, 0.002084, 0.002294, 0.002563, 0.002919, 0.003359, 0.003863,
	0.004439, 0.005093, 0.005832, 0.006677, 0.007621, 0.008636, 0.009694, 0.010764, 0.011763, 0.012709,
	0.013730, 0.014953, 0.016506, 0.018344, 0.020381, 0.022686, 0.025325, 0.028366, 0.031727, 0.035362,
	0.039396, 0.043952, 0.049153, 0.054857, 0.060979, 0.067738, 0.075347, 0.084023, 0.093820, 0.104594,
	0.116265, 0.128751, 0.141973, 0.155931, 0.170677, 0.186213, 0.202538, 0.219655, 0.237713, 0.256712,
	0.276427, 0.296629, 0.317093, 0.338505, 0.361016, 0.383597, 0.405217, 0.424846, 0.444368, 0.464469,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// RP2000 Blue Collar Male
	{ 0.000637, 0.000637, 0.000430, 0.000357, 0.000278, 0.000255, 0.000244, 0.000234, 0.000216, 0.000209,
	0.000212, 0.000219, 0.000228, 0.000240, 0.000254, 0.000269, 0.000284, 0.000301, 0.000316, 0.000331,
	0.000345, 0.000357, 0.000366, 0.000373, 0.000376, 0.000376, 0.000378, 0.000382, 0.000393, 0.000412,
	0.000726, 0.000800, 0.000875, 0.000949, 0.001019, 0.001087, 0.001150, 0.001206, 0.001262, 0.001315,
	0.001371, 0.001434, 0.001508, 0.001591, 0.001686, 0.001793, 0.001894, 0.002006, 0.002128, 0.002264,
	0.002412, 0.002744, 0.002995, 0.003296, 0.003643, 0.004196, 0.004967, 0.005629, 0.006398, 0.007258,
	0.008270, 0.009428, 0.010773, 0.012310, 0.013811, 0.015539, 0.017554, 0.019542, 0.021681, 0.023944,
	0.026758, 0.029337, 0.032192, 0.035401, 0.039053, 0.043131, 0.047693, 0.052675, 0.058117, 0.064067,
	0.070547, 0.078164, 0.086361, 0.095191, 0.104668, 0.115077, 0.126358, 0.138628, 0.151945, 0.166254,
	0.181757, 0.196373, 0.211623, 0.227353, 0.243172, 0.259466, 0.283905, 0.299852, 0.315296, 0.330207,
	0.344556, 0.358628, 0.371685, 0.383040, 0.392003, 0.397886, 0.400000, 0.400000, 0.400000, 0.400000,
	0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000,
	1.000000 },
	// RP2000 Blue Collar Female
	{ 0.000171, 0.000171, 0.000171, 0.000171, 0.000171, 0.000171, 0.000140, 0.000118, 0.000104, 0.000097,
	0.000096, 0.000104, 0.000113, 0.000122, 0.000131, 0.000140, 0.000149, 0.000159, 0.000168, 0.000179,
	0.000189, 0.000201, 0.000212, 0.000225, 0.000238, 0.000253, 0.000268, 0.000283, 0.000301, 0.000320,
	0.000342, 0.000364, 0.000388, 0.000414, 0.000443, 0.000476, 0.000502, 0.000535, 0.000573, 0.000617,
	0.000665, 0.000716, 0.000775, 0.000841, 0.000919, 0.001010, 0.001117, 0.001237, 0.001366, 0.001505,
	0.001647, 0.001793, 0.001948, 0.002119, 0.002315, 0.002541, 0.002803, 0.003103, 0.003442, 0.003821,
	0.004241, 0.004702, 0.005210, 0.005769, 0.006385, 0.007064, 0.007817, 0.008681, 0.009702, 0.010921,
	0.012385, 0.014128, 0.016159, 0.018481, 0.021091, 0.023992, 0.027184, 0.030672, 0.034459, 0.038549,
	0.042945, 0.047655, 0.052691, 0.058071, 0.063807, 0.069918, 0.076570, 0.083870, 0.091935, 0.101354,
	0.111750, 0.123076, 0.135630, 0.149577, 0.165103, 0.182419, 0.201757, 0.222043, 0.243899, 0.268185,
	0.295187, 0.325225, 0.358897, 0.395842, 0.438360, 0.487816, 0.545886, 0.614309, 0.694884, 0.789474,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// RP2000 White Collar Male
	{ 0.000637, 0.000637, 0.000430, 0.000357, 0.000278, 0.000255, 0.000244, 0.000234, 0.000216, 0.000209,
	0.000212, 0.000219, 0.000228, 0.000240, 0.000254, 0.000269, 0.000284, 0.000301, 0.000316, 0.000331,
	0.000345, 0.000357, 0.000366, 0.000373, 0.000376, 0.000376, 0.000378, 0.000382, 0.000393, 0.000412,
	0.000353, 0.000388, 0.000431, 0.000481, 0.000534, 0.000591, 0.000649, 0.000707, 0.000766, 0.000827,
	0.000890, 0.000958, 0.001035, 0.001124, 0.001225, 0.001342, 0.001458, 0.001583, 0.001711, 0.001843,
	0.001978, 0.002303, 0.002498, 0.002715, 0.002948, 0.003302, 0.003749, 0.004090, 0.004488, 0.004967,
	0.005583, 0.006353, 0.007314, 0.008477, 0.009690, 0.011061, 0.012581, 0.014037, 0.015570, 0.017195,
	0.019275, 0.021400, 0.023871, 0.026710, 0.029968, 0.033634, 0.037783, 0.042356, 0.047484, 0.053177,
	0.059412, 0.066782, 0.074932, 0.083976, 0.093792, 0.104665, 0.116780, 0.130193, 0.144868, 0.161095,
	0.178273, 0.194975, 0.212056, 0.229456, 0.246431, 0.263211, 0.283905, 0.299852, 0.315296, 0.330207,
	0.344556, 0.358628, 0.371685, 0.383040, 0.392003, 0.397886, 0.400000, 0.400000, 0.400000, 0.400000,
	0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000,
	1.000000 },
	// RP2000 White Collar Female
	{ 0.000171, 0.000171, 0.000171, 0.000171, 0.000171, 0.000171, 0.000140, 0.000118, 0.000104, 0.000097,
	0.000096, 0.000104, 0.000113, 0.000122, 0.000131, 0.000140, 0.000149, 0.000159, 0.000168, 0.000179,
	0.000189, 0.000201, 0.000212, 0.000225, 0.000238, 0.000253, 0.000268, 0.000283, 0.000301, 0.000320,
	0.000342, 0.000364, 0.000388, 0.000414, 0.000443, 0.000476, 0.000502, 0.000535, 0.000573, 0.000617,
	0.000665, 0.000716, 0.000775, 0.000841, 0.000919, 0.001010, 0.001117, 0.001237, 0.001366, 0.001505,
	0.001647, 0.001793, 0.001948, 0.002119, 0.002315, 0.002541, 0.002803, 0.003103, 0.003442, 0.003821,
	0.004241, 0.004702, 0.005210, 0.005769, 0.006385, 0.007064, 0.007817, 0.008681, 0.009702, 0.010921,
	0.012385, 0.014128, 0.016159, 0.018481, 0.021091, 0.023992, 0.027184, 0.030672, 0.034459, 0.038549,
	0.042945, 0.047655, 0.052691, 0.058071, 0.063807, 0.069918, 0.076570, 0.083870, 0.091935, 0.101354,
	0.111750, 0.123076, 0.135630, 0.149577, 0.165103, 0.182419, 0.201757, 0.222043, 0.243899, 0.268185,
	0.295187, 0.325225, 0.358897, 0.395842, 0.438360, 0.487816, 0.545886, 0.614309, 0.694884, 0.789474,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// RP2000 Combined Male
	{ 0.000637, 0.000637, 0.000430, 0.000357, 0.000278, 0.000255, 0.000244, 0.000234, 0.000216, 0.000209,
	0.000212, 0.000219, 0.000228, 0.000240, 0.000254, 0.000269, 0.000284, 0.000301, 0.000316, 0.000331,
	0.000345, 0.000357, 0.000366, 0.000373, 0.000376, 0.000376, 0.000378, 0.000382, 0.000393, 0.000412,
	0.000444, 0.000499, 0.000562, 0.000631, 0.000702, 0.000773, 0.000841, 0.000904, 0.000964, 0.001021,
	0.001079, 0.001142, 0.001215, 0.001299, 0.001397, 0.001508, 0.001616, 0.001734, 0.001860, 0.001995,
	0.002138, 0.002449, 0.002667, 0.002916, 0.003196, 0.003624, 0.004200, 0.004693, 0.005273, 0.005945,
	0.006747, 0.007676, 0.008757, 0.010012, 0.011280, 0.012737, 0.014409, 0.016075, 0.017871, 0.019802,
	0.022206, 0.024570, 0.027281, 0.030387, 0.033900, 0.037834, 0.042169, 0.046906, 0.052123, 0.057927,
	0.064368, 0.072041, 0.080486, 0.089718, 0.099779, 0.110757, 0.122797, 0.136043, 0.150590, 0.166420,
	0.183408, 0.199769, 0.216605, 0.233662, 0.250693, 0.267491, 0.283905, 0.299852, 0.315296, 0.330207,
	0.344556, 0.358628, 0.371685, 0.383040, 0.392003, 0.397886, 0.400000, 0.400000, 0.400000, 0.400000,
	0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000, 0.400000,
	1.000000 },
	// RP2000 Combined Female
	{ 0.000171, 0.000171, 0.000171, 0.000171, 0.000171, 0.000171, 0.000140, 0.000118, 0.000104, 0.000097,
	0.000096, 0.000104, 0.000113, 0.000122, 0.000131, 0.000140, 0.000149, 0.000159, 0.000168, 0.000179,
	0.000189, 0.000201, 0.000212, 0.000225, 0.000238, 0.000253, 0.000268, 0.000283, 0.000301, 0.000320,
	0.000342, 0.000364, 0.000388, 0.000414, 0.000443, 0.000476, 0.000502, 0.000535, 0.000573, 0.000617,
	0.000665, 0.000716, 0.000775, 0.000841, 0.000919, 0.001010, 0.001117, 0.001237, 0.001366, 0.001505,
	0.001647, 0.001793, 0.001948, 0.002119, 0.002315, 0.002541, 0.002803, 0.003103, 0.003442, 0.003821,
	0.004241, 0.004702, 0.005210, 0.005769, 0.006385, 0.007064, 0.007817, 0.008681, 0.009702, 0.010921,
	0.012385, 0.014128, 0.016159, 0.018481, 0.021091, 0.023992, 0.027184, 0.030672, 0.034459, 0.038549,
	0.042945, 0.047655, 0.052691, 0.058071, 0.063807, 0.069918, 0.076570, 0.083870, 0.091935, 0.101354,
	0.111750, 0.123076, 0.135630, 0.149577, 0.165103, 0.182419, 0.201757, 0.222043, 0.243899, 0.268185,
	0.295187, 0.325225, 0.358897, 0.395842, 0.438360, 0.487816, 0.545886, 0.614309, 0.694884, 0.789474,
	1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,
	1.000000 },
	// CPM Combined Male
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00067, 0.00075,
	0.00082, 0.00089, 0.00095, 0.00101, 0.00105, 0.00108, 0.00113, 0.00116, 0.00117, 0.00119,
	0.00120, 0.00122, 0.00122, 0.00120, 0.00120, 0.00120, 0.00120, 0.00122, 0.00125, 0.00130,
	0.00136, 0.00144, 0.00154, 0.00165, 0.00178, 0.00190, 0.00205, 0.00219, 0.00234, 0.00250,
	0.00266, 0.00285, 0.00307, 0.00333, 0.00365, 0.00403, 0.00448, 0.00495, 0.00542, 0.00587,
	0.00628, 0.00666, 0.00702, 0.00743, 0.00790, 0.00844, 0.00907, 0.00981, 0.01066, 0.01166,
	0.01282, 0.01417, 0.01571, 0.01749, 0.01952, 0.02183, 0.02449, 0.02754, 0.03105, 0.03511,
	0.03981, 0.04522, 0.05144, 0.05854, 0.06660, 0.07571, 0.08596, 0.09744, 0.11026, 0.12454,
	0.14041, 0.15801, 0.17750, 0.19909, 0.22299, 0.24808, 0.27346, 0.29848, 0.32273, 0.34602,
	0.36843, 0.39026, 0.41203, 0.43454, 0.45879, 0.47904, 0.49928, 0.51950, 0.53970, 0.55987,
	0.58000, 0.60000, 0.62000, 0.64000, 0.66000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Combined Female
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00015, 0.00017,
	0.00018, 0.00019, 0.00020, 0.00022, 0.00023, 0.00024, 0.00025, 0.00027, 0.00027, 0.00028,
	0.00030, 0.00031, 0.00034, 0.00036, 0.00039, 0.00042, 0.00045, 0.00048, 0.00053, 0.00057,
	0.00061, 0.00065, 0.00069, 0.00075, 0.00080, 0.00086, 0.00092, 0.00101, 0.00109, 0.00119,
	0.00129, 0.00141, 0.00153, 0.00168, 0.00186, 0.00207, 0.00231, 0.00258, 0.00287, 0.00318,
	0.00350, 0.00384, 0.00421, 0.00464, 0.00511, 0.00562, 0.00617, 0.00675, 0.00739, 0.00809,
	0.00886, 0.00973, 0.01072, 0.01185, 0.01316, 0.01469, 0.01649, 0.01859, 0.02106, 0.02394,
	0.02729, 0.03118, 0.03568, 0.04085, 0.04677, 0.05352, 0.06118, 0.06984, 0.07959, 0.09054,
	0.10280, 0.11650, 0.13178, 0.14883, 0.16783, 0.18902, 0.21263, 0.23897, 0.26615, 0.29275,
	0.31779, 0.34076, 0.36161, 0.38072, 0.39894, 0.41916, 0.43937, 0.45956, 0.47973, 0.50988,
	0.53000, 0.55000, 0.57000, 0.59000, 0.61000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Private Male
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00076, 0.00085,
	0.00093, 0.00101, 0.00108, 0.00115, 0.00120, 0.00123, 0.00128, 0.00131, 0.00133, 0.00135,
	0.00136, 0.00138, 0.00138, 0.00136, 0.00136, 0.00136, 0.00136, 0.00138, 0.00142, 0.00147,
	0.00154, 0.00163, 0.00174, 0.00187, 0.00201, 0.00216, 0.00232, 0.00249, 0.00265, 0.00283,
	0.00301, 0.00323, 0.00349, 0.00378, 0.00412, 0.00453, 0.00500, 0.00552, 0.00608, 0.00667,
	0.00727, 0.00787, 0.00847, 0.00905, 0.00964, 0.01024, 0.01089, 0.01163, 0.01253, 0.01361,
	0.01488, 0.01636, 0.01808, 0.02007, 0.02236, 0.02500, 0.02801, 0.03146, 0.03541, 0.03993,
	0.04507, 0.05092, 0.05753, 0.06496, 0.07327, 0.08252, 0.09277, 0.10412, 0.11667, 0.13054,
	0.14587, 0.16282, 0.18159, 0.20238, 0.22543, 0.24970, 0.27436, 0.29882, 0.32267, 0.34575,
	0.36811, 0.39000, 0.41191, 0.43454, 0.45879, 0.47904, 0.49928, 0.51950, 0.53970, 0.55987,
	0.58000, 0.60000, 0.62000, 0.64000, 0.66000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Private Female
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00017, 0.00019,
	0.00020, 0.00021, 0.00022, 0.00024, 0.00025, 0.00027, 0.00028, 0.00029, 0.00030, 0.00031,
	0.00033, 0.00035, 0.00037, 0.00039, 0.00043, 0.00046, 0.00050, 0.00053, 0.00058, 0.00062,
	0.00067, 0.00072, 0.00076, 0.00082, 0.00088, 0.00095, 0.00102, 0.00111, 0.00120, 0.00130,
	0.00142, 0.00155, 0.00169, 0.00185, 0.00204, 0.00228, 0.00254, 0.00284, 0.00316, 0.00349,
	0.00385, 0.00422, 0.00463, 0.00510, 0.00561, 0.00618, 0.00678, 0.00742, 0.00812, 0.00889,
	0.00974, 0.01069, 0.01178, 0.01303, 0.01447, 0.01615, 0.01812, 0.02044, 0.02315, 0.02631,
	0.03000, 0.03428, 0.03922, 0.04490, 0.05141, 0.05883, 0.06685, 0.07585, 0.08591, 0.09713,
	0.10960, 0.12343, 0.13876, 0.15572, 0.17450, 0.19527, 0.21826, 0.24371, 0.26967, 0.29468,
	0.31779, 0.34076, 0.36161, 0.38072, 0.39894, 0.41916, 0.43937, 0.45956, 0.47973, 0.50988,
	0.53000, 0.55000, 0.57000, 0.59000, 0.61000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Public Male
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00062, 0.00069,
	0.00076, 0.00083, 0.00088, 0.00094, 0.00098, 0.00100, 0.00104, 0.00107, 0.00108, 0.00110,
	0.00111, 0.00113, 0.00113, 0.00111, 0.00111, 0.00111, 0.00111, 0.00113, 0.00116, 0.00120,
	0.00126, 0.00133, 0.00142, 0.00153, 0.00164, 0.00176, 0.00190, 0.00203, 0.00216, 0.00231,
	0.00246, 0.00264, 0.00284, 0.00308, 0.00334, 0.00363, 0.00393, 0.00425, 0.00458, 0.00494,
	0.00531, 0.00570, 0.00612, 0.00658, 0.00707, 0.00762, 0.00824, 0.00893, 0.00973, 0.01064,
	0.01169, 0.01290, 0.01431, 0.01593, 0.01781, 0.01999, 0.02251, 0.02544, 0.02884, 0.03279,
	0.03735, 0.04261, 0.04864, 0.05552, 0.06333, 0.07217, 0.08213, 0.09331, 0.10583, 0.11981,
	0.13540, 0.15277, 0.17209, 0.19358, 0.21749, 0.24273, 0.26845, 0.29400, 0.31895, 0.34308,
	0.36639, 0.38908, 0.41159, 0.43454, 0.45879, 0.47904, 0.49928, 0.51950, 0.53970, 0.55987,
	0.58000, 0.60000, 0.62000, 0.64000, 0.66000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Public Female
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00015, 0.00017,
	0.00018, 0.00019, 0.00020, 0.00022, 0.00022, 0.00024, 0.00025, 0.00026, 0.00027, 0.00028,
	0.00030, 0.00031, 0.00033, 0.00035, 0.00039, 0.00042, 0.00045, 0.00048, 0.00052, 0.00056,
	0.00060, 0.00065, 0.00069, 0.00074, 0.00079, 0.00086, 0.00092, 0.00100, 0.00108, 0.00118,
	0.00128, 0.00140, 0.00152, 0.00167, 0.00185, 0.00206, 0.00230, 0.00257, 0.00285, 0.00316,
	0.00348, 0.00381, 0.00418, 0.00460, 0.00507, 0.00558, 0.00612, 0.00671, 0.00734, 0.00803,
	0.00880, 0.00966, 0.01064, 0.01177, 0.01307, 0.01459, 0.01638, 0.01847, 0.02091, 0.02377,
	0.02711, 0.03097, 0.03544, 0.04057, 0.04645, 0.05316, 0.06079, 0.06943, 0.07916, 0.09009,
	0.10233, 0.11602, 0.13131, 0.14836, 0.16738, 0.18859, 0.21225, 0.23865, 0.26591, 0.29261,
	0.31779, 0.34076, 0.36161, 0.38072, 0.39894, 0.41916, 0.43937, 0.45956, 0.47973, 0.50988,
	0.53000, 0.55000, 0.57000, 0.59000, 0.61000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Blue Collar Blend Male
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00076, 0.00085,
	0.00093, 0.00101, 0.00108, 0.00115, 0.00120, 0.00123, 0.00128, 0.00131, 0.00133, 0.00135,
	0.00136, 0.00138, 0.00138, 0.00136, 0.00136, 0.00136, 0.00136, 0.00138, 0.00142, 0.00147,
	0.00154, 0.00163, 0.00174, 0.00187, 0.00201, 0.00216, 0.00232, 0.00249, 0.00265, 0.00283,
	0.00301, 0.00323, 0.00349, 0.00378, 0.00412, 0.00453, 0.00500, 0.00552, 0.00608, 0.00667,
	0.00727, 0.00787, 0.00857, 0.00952, 0.01087, 0.01252, 0.01432, 0.01614, 0.01797, 0.01980,
	0.02178, 0.02384, 0.02613, 0.02870, 0.03163, 0.03541, 0.03915, 0.04386, 0.04908, 0.05488,
	0.06129, 0.06887, 0.07718, 0.08507, 0.09486, 0.10430, 0.11452, 0.12743, 0.14165, 0.15499,
	0.17184, 0.18566, 0.20291, 0.21799, 0.23316, 0.25230, 0.27436, 0.29882, 0.32267, 0.34575,
	0.36811, 0.39000, 0.41191, 0.43454, 0.45879, 0.47904, 0.49928, 0.51950, 0.53970, 0.55987,
	0.58000, 0.60000, 0.62000, 0.64000, 0.66000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// CPM Blue Collar Blend Female
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00017, 0.00019,
	0.00020, 0.00021, 0.00022, 0.00024, 0.00025, 0.00027, 0.00028, 0.00029, 0.00030, 0.00031,
	0.00033, 0.00035, 0.00037, 0.00039, 0.00043, 0.00046, 0.00050, 0.00053, 0.00058, 0.00063,
	0.00068, 0.00074, 0.00081, 0.00088, 0.00096, 0.00103, 0.00110, 0.00118, 0.00126, 0.00136,
	0.00148, 0.00161, 0.00177, 0.00195, 0.00214, 0.00239, 0.00268, 0.00300, 0.00335, 0.00375,
	0.00423, 0.00481, 0.00548, 0.00621, 0.00706, 0.00794, 0.00887, 0.00987, 0.01092, 0.01208,
	0.01339, 0.01487, 0.01649, 0.01825, 0.02001, 0.02188, 0.02416, 0.02694, 0.02989, 0.03326,
	0.03718, 0.04172, 0.04691, 0.05282, 0.05954, 0.06761, 0.07646, 0.08633, 0.09652, 0.10837,
	0.12033, 0.13298, 0.14630, 0.16147, 0.17603, 0.19527, 0.21826, 0.24371, 0.26967, 0.29468,
	0.31779, 0.34076, 0.36161, 0.38072, 0.39894, 0.41916, 0.43937, 0.45956, 0.47973, 0.50988,
	0.53000, 0.55000, 0.57000, 0.59000, 0.61000, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// LAPP Custom Male
  { 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00096, 0.00106,
	0.00113, 0.00120, 0.00126, 0.00134, 0.00141, 0.00146, 0.00154, 0.00159, 0.00165, 0.00172,
	0.00179, 0.00187, 0.00192, 0.00188, 0.00186, 0.00185, 0.00184, 0.00186, 0.00187, 0.00192,
	0.00198, 0.00207, 0.00218, 0.00227, 0.00239, 0.00248, 0.00260, 0.00270, 0.00289, 0.00308,
	0.00328, 0.00357, 0.00391, 0.00430, 0.00479, 0.00430, 0.00486, 0.00545, 0.00607, 0.00668,
	0.00726, 0.00782, 0.00837, 0.00901, 0.00973, 0.01584, 0.01703, 0.01842, 0.02001, 0.02189,
	0.02407, 0.02653, 0.02933, 0.03256, 0.03623, 0.03704, 0.04144, 0.04646, 0.05224, 0.05890,
	0.06660, 0.07355, 0.08135, 0.09000, 0.09955, 0.10003, 0.11044, 0.12173, 0.13396, 0.14715,
	0.16136, 0.17661, 0.19298, 0.21057, 0.22944, 0.24835, 0.27374, 0.29876, 0.32304, 0.34635,
	0.36878, 0.39063, 0.41242, 0.43495, 0.45923, 0.47950, 0.49976, 0.51999, 0.54018, 0.56032,
	0.58042, 0.60040, 0.62036, 0.64033, 0.66029, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 },
	// LAPP Custom Female
  { 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
	0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00018, 0.00020,
	0.00021, 0.00022, 0.00022, 0.00025, 0.00025, 0.00027, 0.00028, 0.00030, 0.00031, 0.00033,
	0.00035, 0.00037, 0.00039, 0.00042, 0.00047, 0.00051, 0.00055, 0.00059, 0.00064, 0.00069,
	0.00074, 0.00080, 0.00085, 0.00089, 0.00094, 0.00101, 0.00107, 0.00115, 0.00125, 0.00137,
	0.00150, 0.00165, 0.00180, 0.00199, 0.00222, 0.00174, 0.00196, 0.00220, 0.00245, 0.00274,
	0.00304, 0.00335, 0.00369, 0.00409, 0.00454, 0.00647, 0.00709, 0.00778, 0.00851, 0.00930,
	0.01020, 0.01119, 0.01233, 0.01364, 0.01514, 0.01784, 0.02003, 0.02259, 0.02557, 0.02907,
	0.03316, 0.03788, 0.04334, 0.04962, 0.05680, 0.06842, 0.07641, 0.08524, 0.09493, 0.10552,
	0.11708, 0.12921, 0.14237, 0.15661, 0.17202, 0.18873, 0.21240, 0.23880, 0.26608, 0.29280,
	0.31799, 0.34098, 0.36184, 0.38096, 0.39920, 0.41943, 0.43965, 0.45985, 0.48002, 0.51015,
	0.53025, 0.55024, 0.57022, 0.59020, 0.61018, 1.00000, 1.00000, 1.00000, 1.00000, 1.00000,
	1.00000 }
};

static const double projScales[2][121] = {
// Scale AA Male
{0.000,0.020,0.020,0.020,0.020,0.020,0.020,0.020,0.020,0.020,
 0.020,0.020,0.020,0.020,0.019,0.019,0.019,0.019,0.019,0.019,
 0.019,0.018,0.017,0.015,0.013,0.010,0.006,0.005,0.005,0.005,
 0.005,0.005,0.005,0.005,0.005,0.005,0.005,0.005,0.006,0.007,
 0.008,0.009,0.010,0.011,0.012,0.013,0.014,0.015,0.016,0.017,
 0.018,0.019,0.020,0.020,0.020,0.019,0.018,0.017,0.016,0.016,
 0.016,0.015,0.015,0.014,0.014,0.014,0.013,0.013,0.014,0.014,
 0.015,0.015,0.015,0.015,0.015,0.014,0.014,0.013,0.012,0.011,
 0.010,0.009,0.008,0.008,0.007,0.007,0.007,0.006,0.005,0.005,
 0.004,0.004,0.003,0.003,0.003,0.002,0.002,0.002,0.001,0.001,
 0.001,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,
 0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,
 0.000},
// Scale AA Female
{0.000,0.020,0.020,0.020,0.020,0.020,0.020,0.020,0.020,0.020,
 0.020,0.020,0.020,0.020,0.018,0.016,0.015,0.014,0.014,0.015,
 0.016,0.017,0.017,0.016,0.015,0.014,0.012,0.012,0.012,0.012,
 0.010,0.008,0.008,0.009,0.010,0.011,0.012,0.013,0.014,0.015,
 0.015,0.015,0.015,0.015,0.015,0.016,0.017,0.018,0.018,0.018,
 0.017,0.016,0.014,0.012,0.010,0.008,0.006,0.005,0.005,0.005,
 0.005,0.005,0.005,0.005,0.005,0.005,0.005,0.005,0.005,0.005,
 0.005,0.006,0.006,0.007,0.007,0.008,0.008,0.007,0.007,0.007,
 0.007,0.007,0.007,0.007,0.007,0.006,0.005,0.004,0.004,0.003,
 0.003,0.003,0.003,0.002,0.002,0.002,0.002,0.001,0.001,0.001,
 0.001,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,
 0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,0.000,
 0.000}};

static const double projScales2D[2][121][31] = {
	// Scale CPM-B Male (x=2000 to 2030, y=0 to 120)
	{{0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02505, 0.02411, 0.02316, 0.02221, 0.02126, 0.02032, 0.01937, 0.01842, 0.01747, 0.01653, 0.01558, 0.01463, 0.01368, 0.01274, 0.01179, 0.01084, 0.00989, 0.00895, 0.00800 },
	{ 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02363, 0.02276, 0.02189, 0.02103, 0.02016, 0.01929, 0.01842, 0.01755, 0.01668, 0.01582, 0.01495, 0.01408, 0.01321, 0.01234, 0.01147, 0.01061, 0.00974, 0.00887, 0.00800 },
	{ 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02221, 0.02142, 0.02063, 0.01984, 0.01905, 0.01826, 0.01747, 0.01668, 0.01589, 0.01511, 0.01432, 0.01353, 0.01274, 0.01195, 0.01116, 0.01037, 0.00958, 0.00879, 0.00800 },
	{ 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02079, 0.02008, 0.01937, 0.01866, 0.01795, 0.01724, 0.01653, 0.01582, 0.01511, 0.01439, 0.01368, 0.01297, 0.01226, 0.01155, 0.01084, 0.01013, 0.00942, 0.00871, 0.00800 },
	{ 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.01937, 0.01874, 0.01811, 0.01747, 0.01684, 0.01621, 0.01558, 0.01495, 0.01432, 0.01368, 0.01305, 0.01242, 0.01179, 0.01116, 0.01053, 0.00989, 0.00926, 0.00863, 0.00800 },
	{ 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.02050, 0.01984, 0.01918, 0.01853, 0.01787, 0.01721, 0.01655, 0.01589, 0.01524, 0.01458, 0.01392, 0.01326, 0.01261, 0.01195, 0.01129, 0.01063, 0.00997, 0.00932, 0.00866, 0.00800 },
	{ 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02032, 0.01963, 0.01895, 0.01826, 0.01758, 0.01689, 0.01621, 0.01553, 0.01484, 0.01416, 0.01347, 0.01279, 0.01211, 0.01142, 0.01074, 0.01005, 0.00937, 0.00868, 0.00800 },
	{ 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02150, 0.02079, 0.02008, 0.01937, 0.01866, 0.01795, 0.01724, 0.01653, 0.01582, 0.01511, 0.01439, 0.01368, 0.01297, 0.01226, 0.01155, 0.01084, 0.01013, 0.00942, 0.00871, 0.00800 },
	{ 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02126, 0.02053, 0.01979, 0.01905, 0.01832, 0.01758, 0.01684, 0.01611, 0.01537, 0.01463, 0.01389, 0.01316, 0.01242, 0.01168, 0.01095, 0.01021, 0.00947, 0.00874, 0.00800 },
	{ 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02250, 0.02174, 0.02097, 0.02021, 0.01945, 0.01868, 0.01792, 0.01716, 0.01639, 0.01563, 0.01487, 0.01411, 0.01334, 0.01258, 0.01182, 0.01105, 0.01029, 0.00953, 0.00876, 0.00800 },
	{ 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02450, 0.02363, 0.02276, 0.02189, 0.02103, 0.02016, 0.01929, 0.01842, 0.01755, 0.01668, 0.01582, 0.01495, 0.01408, 0.01321, 0.01234, 0.01147, 0.01061, 0.00974, 0.00887, 0.00800 },
	{ 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02650, 0.02553, 0.02455, 0.02358, 0.02261, 0.02163, 0.02066, 0.01968, 0.01871, 0.01774, 0.01676, 0.01579, 0.01482, 0.01384, 0.01287, 0.01189, 0.01092, 0.00995, 0.00897, 0.00800 },
	{ 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02850, 0.02742, 0.02634, 0.02526, 0.02418, 0.02311, 0.02203, 0.02095, 0.01987, 0.01879, 0.01771, 0.01663, 0.01555, 0.01447, 0.01339, 0.01232, 0.01124, 0.01016, 0.00908, 0.00800 },
	{ 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.02932, 0.02813, 0.02695, 0.02576, 0.02458, 0.02339, 0.02221, 0.02103, 0.01984, 0.01866, 0.01747, 0.01629, 0.01511, 0.01392, 0.01274, 0.01155, 0.01037, 0.00918, 0.00800 },
	{ 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03250, 0.03121, 0.02992, 0.02863, 0.02734, 0.02605, 0.02476, 0.02347, 0.02218, 0.02089, 0.01961, 0.01832, 0.01703, 0.01574, 0.01445, 0.01316, 0.01187, 0.01058, 0.00929, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03150, 0.03026, 0.02903, 0.02779, 0.02655, 0.02532, 0.02408, 0.02284, 0.02161, 0.02037, 0.01913, 0.01789, 0.01666, 0.01542, 0.01418, 0.01295, 0.01171, 0.01047, 0.00924, 0.00800 },
	{ 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.02979, 0.02858, 0.02737, 0.02616, 0.02495, 0.02374, 0.02253, 0.02132, 0.02011, 0.01889, 0.01768, 0.01647, 0.01526, 0.01405, 0.01284, 0.01163, 0.01042, 0.00921, 0.00800 },
	{ 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.03050, 0.02932, 0.02813, 0.02695, 0.02576, 0.02458, 0.02339, 0.02221, 0.02103, 0.01984, 0.01866, 0.01747, 0.01629, 0.01511, 0.01392, 0.01274, 0.01155, 0.01037, 0.00918, 0.00800 },
	{ 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.02884, 0.02768, 0.02653, 0.02537, 0.02421, 0.02305, 0.02189, 0.02074, 0.01958, 0.01842, 0.01726, 0.01611, 0.01495, 0.01379, 0.01263, 0.01147, 0.01032, 0.00916, 0.00800 },
	{ 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02900, 0.02789, 0.02679, 0.02568, 0.02458, 0.02347, 0.02237, 0.02126, 0.02016, 0.01905, 0.01795, 0.01684, 0.01574, 0.01463, 0.01353, 0.01242, 0.01132, 0.01021, 0.00911, 0.00800 },
	{ 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02695, 0.02589, 0.02484, 0.02379, 0.02274, 0.02168, 0.02063, 0.01958, 0.01853, 0.01747, 0.01642, 0.01537, 0.01432, 0.01326, 0.01221, 0.01116, 0.01011, 0.00905, 0.00800 },
	{ 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02700, 0.02600, 0.02500, 0.02400, 0.02300, 0.02200, 0.02100, 0.02000, 0.01900, 0.01800, 0.01700, 0.01600, 0.01500, 0.01400, 0.01300, 0.01200, 0.01100, 0.01000, 0.00900, 0.00800 },
	{ 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02505, 0.02411, 0.02316, 0.02221, 0.02126, 0.02032, 0.01937, 0.01842, 0.01747, 0.01653, 0.01558, 0.01463, 0.01368, 0.01274, 0.01179, 0.01084, 0.00989, 0.00895, 0.00800 },
	{ 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02500, 0.02411, 0.02321, 0.02232, 0.02142, 0.02053, 0.01963, 0.01874, 0.01784, 0.01695, 0.01605, 0.01516, 0.01426, 0.01337, 0.01247, 0.01158, 0.01068, 0.00979, 0.00889, 0.00800 },
	{ 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02300, 0.02221, 0.02142, 0.02063, 0.01984, 0.01905, 0.01826, 0.01747, 0.01668, 0.01589, 0.01511, 0.01432, 0.01353, 0.01274, 0.01195, 0.01116, 0.01037, 0.00958, 0.00879, 0.00800 },
	{ 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02100, 0.02032, 0.01963, 0.01895, 0.01826, 0.01758, 0.01689, 0.01621, 0.01553, 0.01484, 0.01416, 0.01347, 0.01279, 0.01211, 0.01142, 0.01074, 0.01005, 0.00937, 0.00868, 0.00800 },
	{ 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01900, 0.01842, 0.01784, 0.01726, 0.01668, 0.01611, 0.01553, 0.01495, 0.01437, 0.01379, 0.01321, 0.01263, 0.01205, 0.01147, 0.01089, 0.01032, 0.00974, 0.00916, 0.00858, 0.00800 },
	{ 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01700, 0.01653, 0.01605, 0.01558, 0.01511, 0.01463, 0.01416, 0.01368, 0.01321, 0.01274, 0.01226, 0.01179, 0.01132, 0.01084, 0.01037, 0.00989, 0.00942, 0.00895, 0.00847, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01613, 0.01571, 0.01528, 0.01485, 0.01442, 0.01399, 0.01356, 0.01314, 0.01271, 0.01228, 0.01185, 0.01142, 0.01100, 0.01057, 0.01014, 0.00971, 0.00928, 0.00886, 0.00843, 0.00800 },
	{ 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01727, 0.01678, 0.01629, 0.01580, 0.01532, 0.01483, 0.01434, 0.01385, 0.01336, 0.01288, 0.01239, 0.01190, 0.01141, 0.01093, 0.01044, 0.00995, 0.00946, 0.00898, 0.00849, 0.00800 },
	{ 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01840, 0.01785, 0.01731, 0.01676, 0.01621, 0.01566, 0.01512, 0.01457, 0.01402, 0.01347, 0.01293, 0.01238, 0.01183, 0.01128, 0.01074, 0.01019, 0.00964, 0.00909, 0.00855, 0.00800 },
	{ 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01953, 0.01893, 0.01832, 0.01771, 0.01711, 0.01650, 0.01589, 0.01528, 0.01468, 0.01407, 0.01346, 0.01286, 0.01225, 0.01164, 0.01104, 0.01043, 0.00982, 0.00921, 0.00861, 0.00800 },
	{ 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02067, 0.02000, 0.01933, 0.01867, 0.01800, 0.01733, 0.01667, 0.01600, 0.01533, 0.01467, 0.01400, 0.01333, 0.01267, 0.01200, 0.01133, 0.01067, 0.01000, 0.00933, 0.00867, 0.00800 },
	{ 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02180, 0.02107, 0.02035, 0.01962, 0.01889, 0.01817, 0.01744, 0.01672, 0.01599, 0.01526, 0.01454, 0.01381, 0.01308, 0.01236, 0.01163, 0.01091, 0.01018, 0.00945, 0.00873, 0.00800 },
	{ 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02293, 0.02215, 0.02136, 0.02058, 0.01979, 0.01900, 0.01822, 0.01743, 0.01665, 0.01586, 0.01507, 0.01429, 0.01350, 0.01272, 0.01193, 0.01114, 0.01036, 0.00957, 0.00879, 0.00800 },
	{ 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02407, 0.02322, 0.02238, 0.02153, 0.02068, 0.01984, 0.01899, 0.01815, 0.01730, 0.01646, 0.01561, 0.01476, 0.01392, 0.01307, 0.01223, 0.01138, 0.01054, 0.00969, 0.00885, 0.00800 },
	{ 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02520, 0.02429, 0.02339, 0.02248, 0.02158, 0.02067, 0.01977, 0.01886, 0.01796, 0.01705, 0.01615, 0.01524, 0.01434, 0.01343, 0.01253, 0.01162, 0.01072, 0.00981, 0.00891, 0.00800 },
	{ 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02633, 0.02537, 0.02440, 0.02344, 0.02247, 0.02151, 0.02054, 0.01958, 0.01861, 0.01765, 0.01668, 0.01572, 0.01475, 0.01379, 0.01282, 0.01186, 0.01089, 0.00993, 0.00896, 0.00800 },
	{ 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02747, 0.02644, 0.02542, 0.02439, 0.02337, 0.02234, 0.02132, 0.02029, 0.01927, 0.01825, 0.01722, 0.01620, 0.01517, 0.01415, 0.01312, 0.01210, 0.01107, 0.01005, 0.00902, 0.00800 },
	{ 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02860, 0.02752, 0.02643, 0.02535, 0.02426, 0.02318, 0.02209, 0.02101, 0.01993, 0.01884, 0.01776, 0.01667, 0.01559, 0.01451, 0.01342, 0.01234, 0.01125, 0.01017, 0.00908, 0.00800 },
	{ 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02973, 0.02859, 0.02745, 0.02630, 0.02516, 0.02401, 0.02287, 0.02173, 0.02058, 0.01944, 0.01829, 0.01715, 0.01601, 0.01486, 0.01372, 0.01258, 0.01143, 0.01029, 0.00914, 0.00800 },
	{ 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.03087, 0.02966, 0.02846, 0.02726, 0.02605, 0.02485, 0.02365, 0.02244, 0.02124, 0.02004, 0.01883, 0.01763, 0.01642, 0.01522, 0.01402, 0.01281, 0.01161, 0.01041, 0.00920, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03200, 0.03074, 0.02947, 0.02821, 0.02695, 0.02568, 0.02442, 0.02316, 0.02189, 0.02063, 0.01937, 0.01811, 0.01684, 0.01558, 0.01432, 0.01305, 0.01179, 0.01053, 0.00926, 0.00800 },
	{ 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03180, 0.03055, 0.02929, 0.02804, 0.02679, 0.02554, 0.02428, 0.02303, 0.02178, 0.02053, 0.01927, 0.01802, 0.01677, 0.01552, 0.01426, 0.01301, 0.01176, 0.01051, 0.00925, 0.00800 },
	{ 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03160, 0.03036, 0.02912, 0.02787, 0.02663, 0.02539, 0.02415, 0.02291, 0.02166, 0.02042, 0.01918, 0.01794, 0.01669, 0.01545, 0.01421, 0.01297, 0.01173, 0.01048, 0.00924, 0.00800 },
	{ 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03140, 0.03017, 0.02894, 0.02771, 0.02647, 0.02524, 0.02401, 0.02278, 0.02155, 0.02032, 0.01908, 0.01785, 0.01662, 0.01539, 0.01416, 0.01293, 0.01169, 0.01046, 0.00923, 0.00800 },
	{ 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.03120, 0.02998, 0.02876, 0.02754, 0.02632, 0.02509, 0.02387, 0.02265, 0.02143, 0.02021, 0.01899, 0.01777, 0.01655, 0.01533, 0.01411, 0.01288, 0.01166, 0.01044, 0.00922, 0.00800 },
	{ 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.03100, 0.02979, 0.02858, 0.02737, 0.02616, 0.02495, 0.02374, 0.02253, 0.02132, 0.02011, 0.01889, 0.01768, 0.01647, 0.01526, 0.01405, 0.01284, 0.01163, 0.01042, 0.00921, 0.00800 },
	{ 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.03080, 0.02960, 0.02840, 0.02720, 0.02600, 0.02480, 0.02360, 0.02240, 0.02120, 0.02000, 0.01880, 0.01760, 0.01640, 0.01520, 0.01400, 0.01280, 0.01160, 0.01040, 0.00920, 0.00800 },
	{ 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.03060, 0.02941, 0.02822, 0.02703, 0.02584, 0.02465, 0.02346, 0.02227, 0.02108, 0.01989, 0.01871, 0.01752, 0.01633, 0.01514, 0.01395, 0.01276, 0.01157, 0.01038, 0.00919, 0.00800 },
	{ 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.03040, 0.02922, 0.02804, 0.02686, 0.02568, 0.02451, 0.02333, 0.02215, 0.02097, 0.01979, 0.01861, 0.01743, 0.01625, 0.01507, 0.01389, 0.01272, 0.01154, 0.01036, 0.00918, 0.00800 },
	{ 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.03020, 0.02903, 0.02786, 0.02669, 0.02553, 0.02436, 0.02319, 0.02202, 0.02085, 0.01968, 0.01852, 0.01735, 0.01618, 0.01501, 0.01384, 0.01267, 0.01151, 0.01034, 0.00917, 0.00800 },
	{ 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.03000, 0.02884, 0.02768, 0.02653, 0.02537, 0.02421, 0.02305, 0.02189, 0.02074, 0.01958, 0.01842, 0.01726, 0.01611, 0.01495, 0.01379, 0.01263, 0.01147, 0.01032, 0.00916, 0.00800 },
	{ 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02800, 0.02695, 0.02589, 0.02484, 0.02379, 0.02274, 0.02168, 0.02063, 0.01958, 0.01853, 0.01747, 0.01642, 0.01537, 0.01432, 0.01326, 0.01221, 0.01116, 0.01011, 0.00905, 0.00800 },
	{ 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02600, 0.02505, 0.02411, 0.02316, 0.02221, 0.02126, 0.02032, 0.01937, 0.01842, 0.01747, 0.01653, 0.01558, 0.01463, 0.01368, 0.01274, 0.01179, 0.01084, 0.00989, 0.00895, 0.00800 },
	{ 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02400, 0.02314, 0.02227, 0.02141, 0.02055, 0.01968, 0.01882, 0.01796, 0.01709, 0.01623, 0.01537, 0.01451, 0.01364, 0.01278, 0.01192, 0.01105, 0.01019, 0.00933, 0.00846, 0.00760 },
	{ 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02200, 0.02122, 0.02044, 0.01966, 0.01888, 0.01811, 0.01733, 0.01655, 0.01577, 0.01499, 0.01421, 0.01343, 0.01265, 0.01187, 0.01109, 0.01032, 0.00954, 0.00876, 0.00798, 0.00720 },
	{ 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.02000, 0.01931, 0.01861, 0.01792, 0.01722, 0.01653, 0.01583, 0.01514, 0.01444, 0.01375, 0.01305, 0.01236, 0.01166, 0.01097, 0.01027, 0.00958, 0.00888, 0.00819, 0.00749, 0.00680 },
	{ 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01800, 0.01739, 0.01678, 0.01617, 0.01556, 0.01495, 0.01434, 0.01373, 0.01312, 0.01251, 0.01189, 0.01128, 0.01067, 0.01006, 0.00945, 0.00884, 0.00823, 0.00762, 0.00701, 0.00640 },
	{ 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01600, 0.01547, 0.01495, 0.01442, 0.01389, 0.01337, 0.01284, 0.01232, 0.01179, 0.01126, 0.01074, 0.01021, 0.00968, 0.00916, 0.00863, 0.00811, 0.00758, 0.00705, 0.00653, 0.00600 },
	{ 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01356, 0.01312, 0.01267, 0.01223, 0.01179, 0.01135, 0.01091, 0.01046, 0.01002, 0.00958, 0.00914, 0.00869, 0.00825, 0.00781, 0.00737, 0.00693, 0.00648, 0.00604, 0.00560 },
	{ 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01164, 0.01128, 0.01093, 0.01057, 0.01021, 0.00985, 0.00949, 0.00914, 0.00878, 0.00842, 0.00806, 0.00771, 0.00735, 0.00699, 0.00663, 0.00627, 0.00592, 0.00556, 0.00520 },
	{ 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.00973, 0.00945, 0.00918, 0.00891, 0.00863, 0.00836, 0.00808, 0.00781, 0.00754, 0.00726, 0.00699, 0.00672, 0.00644, 0.00617, 0.00589, 0.00562, 0.00535, 0.00507, 0.00480 },
	{ 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00781, 0.00762, 0.00743, 0.00724, 0.00705, 0.00686, 0.00667, 0.00648, 0.00629, 0.00611, 0.00592, 0.00573, 0.00554, 0.00535, 0.00516, 0.00497, 0.00478, 0.00459, 0.00440 },
	{ 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00589, 0.00579, 0.00568, 0.00558, 0.00547, 0.00537, 0.00526, 0.00516, 0.00505, 0.00495, 0.00484, 0.00474, 0.00463, 0.00453, 0.00442, 0.00432, 0.00421, 0.00411, 0.00400 },
	{ 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00399, 0.00398, 0.00397, 0.00396, 0.00395, 0.00394, 0.00393, 0.00392, 0.00391, 0.00389, 0.00388, 0.00387, 0.00386, 0.00385, 0.00384, 0.00383, 0.00382, 0.00381, 0.00380 },
	{ 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00208, 0.00217, 0.00225, 0.00234, 0.00242, 0.00251, 0.00259, 0.00267, 0.00276, 0.00284, 0.00293, 0.00301, 0.00309, 0.00318, 0.00326, 0.00335, 0.00343, 0.00352, 0.00360 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00018, 0.00036, 0.00054, 0.00072, 0.00089, 0.00107, 0.00125, 0.00143, 0.00161, 0.00179, 0.00197, 0.00215, 0.00233, 0.00251, 0.00268, 0.00286, 0.00304, 0.00322, 0.00340 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00017, 0.00034, 0.00051, 0.00067, 0.00084, 0.00101, 0.00118, 0.00135, 0.00152, 0.00168, 0.00185, 0.00202, 0.00219, 0.00236, 0.00253, 0.00269, 0.00286, 0.00303, 0.00320 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00015, 0.00029, 0.00044, 0.00058, 0.00073, 0.00087, 0.00102, 0.00117, 0.00131, 0.00146, 0.00160, 0.00175, 0.00189, 0.00204, 0.00219, 0.00233, 0.00248, 0.00262, 0.00277 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00013, 0.00027, 0.00040, 0.00053, 0.00067, 0.00080, 0.00094, 0.00107, 0.00120, 0.00134, 0.00147, 0.00160, 0.00174, 0.00187, 0.00200, 0.00214, 0.00227, 0.00240, 0.00254 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00012, 0.00024, 0.00036, 0.00049, 0.00061, 0.00073, 0.00085, 0.00097, 0.00109, 0.00121, 0.00134, 0.00146, 0.00158, 0.00170, 0.00182, 0.00194, 0.00207, 0.00219, 0.00231 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00011, 0.00022, 0.00033, 0.00044, 0.00055, 0.00066, 0.00077, 0.00087, 0.00098, 0.00109, 0.00120, 0.00131, 0.00142, 0.00153, 0.00164, 0.00175, 0.00186, 0.00197, 0.00208 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00010, 0.00019, 0.00029, 0.00039, 0.00049, 0.00058, 0.00068, 0.00078, 0.00087, 0.00097, 0.00107, 0.00117, 0.00126, 0.00136, 0.00146, 0.00155, 0.00165, 0.00175, 0.00185 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00008, 0.00017, 0.00026, 0.00034, 0.00042, 0.00051, 0.00060, 0.00068, 0.00076, 0.00085, 0.00094, 0.00102, 0.00111, 0.00119, 0.00128, 0.00136, 0.00144, 0.00153, 0.00162 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00007, 0.00015, 0.00022, 0.00029, 0.00036, 0.00044, 0.00051, 0.00058, 0.00066, 0.00073, 0.00080, 0.00087, 0.00095, 0.00102, 0.00109, 0.00117, 0.00124, 0.00131, 0.00139 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 } },
	// Scale CPM-B Female (x=2000 to 2030, y=0 to 120)
	{{0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 },
	{ 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01550, 0.01511, 0.01471, 0.01432, 0.01392, 0.01353, 0.01313, 0.01274, 0.01234, 0.01195, 0.01155, 0.01116, 0.01076, 0.01037, 0.00997, 0.00958, 0.00918, 0.00879, 0.00839, 0.00800 },
	{ 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01321, 0.01292, 0.01263, 0.01234, 0.01205, 0.01176, 0.01147, 0.01118, 0.01089, 0.01061, 0.01032, 0.01003, 0.00974, 0.00945, 0.00916, 0.00887, 0.00858, 0.00829, 0.00800 },
	{ 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01132, 0.01113, 0.01095, 0.01076, 0.01058, 0.01039, 0.01021, 0.01003, 0.00984, 0.00966, 0.00947, 0.00929, 0.00911, 0.00892, 0.00874, 0.00855, 0.00837, 0.00818, 0.00800 },
	{ 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00942, 0.00934, 0.00926, 0.00918, 0.00911, 0.00903, 0.00895, 0.00887, 0.00879, 0.00871, 0.00863, 0.00855, 0.00847, 0.00839, 0.00832, 0.00824, 0.00816, 0.00808, 0.00800 },
	{ 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00750, 0.00753, 0.00755, 0.00758, 0.00761, 0.00763, 0.00766, 0.00768, 0.00771, 0.00774, 0.00776, 0.00779, 0.00782, 0.00784, 0.00787, 0.00789, 0.00792, 0.00795, 0.00797, 0.00800 },
	{ 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800 },
	{ 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00850, 0.00847, 0.00845, 0.00842, 0.00839, 0.00837, 0.00834, 0.00832, 0.00829, 0.00826, 0.00824, 0.00821, 0.00818, 0.00816, 0.00813, 0.00811, 0.00808, 0.00805, 0.00803, 0.00800 },
	{ 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00900, 0.00895, 0.00889, 0.00884, 0.00879, 0.00874, 0.00868, 0.00863, 0.00858, 0.00853, 0.00847, 0.00842, 0.00837, 0.00832, 0.00826, 0.00821, 0.00816, 0.00811, 0.00805, 0.00800 },
	{ 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00950, 0.00942, 0.00934, 0.00926, 0.00918, 0.00911, 0.00903, 0.00895, 0.00887, 0.00879, 0.00871, 0.00863, 0.00855, 0.00847, 0.00839, 0.00832, 0.00824, 0.00816, 0.00808, 0.00800 },
	{ 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.00989, 0.00979, 0.00968, 0.00958, 0.00947, 0.00937, 0.00926, 0.00916, 0.00905, 0.00895, 0.00884, 0.00874, 0.00863, 0.00853, 0.00842, 0.00832, 0.00821, 0.00811, 0.00800 },
	{ 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01037, 0.01024, 0.01011, 0.00997, 0.00984, 0.00971, 0.00958, 0.00945, 0.00932, 0.00918, 0.00905, 0.00892, 0.00879, 0.00866, 0.00853, 0.00839, 0.00826, 0.00813, 0.00800 },
	{ 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01084, 0.01068, 0.01053, 0.01037, 0.01021, 0.01005, 0.00989, 0.00974, 0.00958, 0.00942, 0.00926, 0.00911, 0.00895, 0.00879, 0.00863, 0.00847, 0.00832, 0.00816, 0.00800 },
	{ 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01132, 0.01113, 0.01095, 0.01076, 0.01058, 0.01039, 0.01021, 0.01003, 0.00984, 0.00966, 0.00947, 0.00929, 0.00911, 0.00892, 0.00874, 0.00855, 0.00837, 0.00818, 0.00800 },
	{ 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01179, 0.01158, 0.01137, 0.01116, 0.01095, 0.01074, 0.01053, 0.01032, 0.01011, 0.00989, 0.00968, 0.00947, 0.00926, 0.00905, 0.00884, 0.00863, 0.00842, 0.00821, 0.00800 },
	{ 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01250, 0.01226, 0.01203, 0.01179, 0.01155, 0.01132, 0.01108, 0.01084, 0.01061, 0.01037, 0.01013, 0.00989, 0.00966, 0.00942, 0.00918, 0.00895, 0.00871, 0.00847, 0.00824, 0.00800 },
	{ 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01274, 0.01247, 0.01221, 0.01195, 0.01168, 0.01142, 0.01116, 0.01089, 0.01063, 0.01037, 0.01011, 0.00984, 0.00958, 0.00932, 0.00905, 0.00879, 0.00853, 0.00826, 0.00800 },
	{ 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01350, 0.01321, 0.01292, 0.01263, 0.01234, 0.01205, 0.01176, 0.01147, 0.01118, 0.01089, 0.01061, 0.01032, 0.01003, 0.00974, 0.00945, 0.00916, 0.00887, 0.00858, 0.00829, 0.00800 },
	{ 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01368, 0.01337, 0.01305, 0.01274, 0.01242, 0.01211, 0.01179, 0.01147, 0.01116, 0.01084, 0.01053, 0.01021, 0.00989, 0.00958, 0.00926, 0.00895, 0.00863, 0.00832, 0.00800 },
	{ 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01450, 0.01416, 0.01382, 0.01347, 0.01313, 0.01279, 0.01245, 0.01211, 0.01176, 0.01142, 0.01108, 0.01074, 0.01039, 0.01005, 0.00971, 0.00937, 0.00903, 0.00868, 0.00834, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01500, 0.01463, 0.01426, 0.01389, 0.01353, 0.01316, 0.01279, 0.01242, 0.01205, 0.01168, 0.01132, 0.01095, 0.01058, 0.01021, 0.00984, 0.00947, 0.00911, 0.00874, 0.00837, 0.00800 },
	{ 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01400, 0.01368, 0.01337, 0.01305, 0.01274, 0.01242, 0.01211, 0.01179, 0.01147, 0.01116, 0.01084, 0.01053, 0.01021, 0.00989, 0.00958, 0.00926, 0.00895, 0.00863, 0.00832, 0.00800 },
	{ 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01300, 0.01274, 0.01247, 0.01221, 0.01195, 0.01168, 0.01142, 0.01116, 0.01089, 0.01063, 0.01037, 0.01011, 0.00984, 0.00958, 0.00932, 0.00905, 0.00879, 0.00853, 0.00826, 0.00800 },
	{ 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01200, 0.01179, 0.01158, 0.01137, 0.01116, 0.01095, 0.01074, 0.01053, 0.01032, 0.01011, 0.00989, 0.00968, 0.00947, 0.00926, 0.00905, 0.00884, 0.00863, 0.00842, 0.00821, 0.00800 },
	{ 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01084, 0.01068, 0.01053, 0.01037, 0.01021, 0.01005, 0.00989, 0.00974, 0.00958, 0.00942, 0.00926, 0.00911, 0.00895, 0.00879, 0.00863, 0.00847, 0.00832, 0.00816, 0.00800 },
	{ 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.00989, 0.00979, 0.00968, 0.00958, 0.00947, 0.00937, 0.00926, 0.00916, 0.00905, 0.00895, 0.00884, 0.00874, 0.00863, 0.00853, 0.00842, 0.00832, 0.00821, 0.00811, 0.00800 },
	{ 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01050, 0.01037, 0.01024, 0.01011, 0.00997, 0.00984, 0.00971, 0.00958, 0.00945, 0.00932, 0.00918, 0.00905, 0.00892, 0.00879, 0.00866, 0.00853, 0.00839, 0.00826, 0.00813, 0.00800 },
	{ 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01100, 0.01084, 0.01068, 0.01053, 0.01037, 0.01021, 0.01005, 0.00989, 0.00974, 0.00958, 0.00942, 0.00926, 0.00911, 0.00895, 0.00879, 0.00863, 0.00847, 0.00832, 0.00816, 0.00800 },
	{ 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01150, 0.01132, 0.01113, 0.01095, 0.01076, 0.01058, 0.01039, 0.01021, 0.01003, 0.00984, 0.00966, 0.00947, 0.00929, 0.00911, 0.00892, 0.00874, 0.00855, 0.00837, 0.00818, 0.00800 },
	{ 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01198, 0.01177, 0.01156, 0.01135, 0.01114, 0.01093, 0.01072, 0.01051, 0.01030, 0.01009, 0.00989, 0.00968, 0.00947, 0.00926, 0.00905, 0.00884, 0.00863, 0.00842, 0.00821, 0.00800 },
	{ 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01246, 0.01223, 0.01199, 0.01176, 0.01152, 0.01129, 0.01105, 0.01082, 0.01058, 0.01035, 0.01011, 0.00988, 0.00964, 0.00941, 0.00917, 0.00894, 0.00870, 0.00847, 0.00823, 0.00800 },
	{ 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01294, 0.01268, 0.01242, 0.01216, 0.01190, 0.01164, 0.01138, 0.01112, 0.01086, 0.01060, 0.01034, 0.01008, 0.00982, 0.00956, 0.00930, 0.00904, 0.00878, 0.00852, 0.00826, 0.00800 },
	{ 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01342, 0.01313, 0.01285, 0.01256, 0.01228, 0.01199, 0.01171, 0.01142, 0.01114, 0.01085, 0.01057, 0.01028, 0.01000, 0.00971, 0.00943, 0.00914, 0.00886, 0.00857, 0.00829, 0.00800 },
	{ 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01390, 0.01359, 0.01328, 0.01297, 0.01266, 0.01235, 0.01204, 0.01173, 0.01142, 0.01111, 0.01079, 0.01048, 0.01017, 0.00986, 0.00955, 0.00924, 0.00893, 0.00862, 0.00831, 0.00800 },
	{ 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01438, 0.01404, 0.01371, 0.01337, 0.01304, 0.01270, 0.01237, 0.01203, 0.01169, 0.01136, 0.01102, 0.01069, 0.01035, 0.01001, 0.00968, 0.00934, 0.00901, 0.00867, 0.00834, 0.00800 },
	{ 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01486, 0.01450, 0.01414, 0.01378, 0.01342, 0.01305, 0.01269, 0.01233, 0.01197, 0.01161, 0.01125, 0.01089, 0.01053, 0.01017, 0.00981, 0.00944, 0.00908, 0.00872, 0.00836, 0.00800 },
	{ 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01534, 0.01495, 0.01457, 0.01418, 0.01379, 0.01341, 0.01302, 0.01264, 0.01225, 0.01186, 0.01148, 0.01109, 0.01070, 0.01032, 0.00993, 0.00955, 0.00916, 0.00877, 0.00839, 0.00800 },
	{ 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01582, 0.01541, 0.01500, 0.01459, 0.01417, 0.01376, 0.01335, 0.01294, 0.01253, 0.01212, 0.01170, 0.01129, 0.01088, 0.01047, 0.01006, 0.00965, 0.00923, 0.00882, 0.00841, 0.00800 },
	{ 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01630, 0.01586, 0.01543, 0.01499, 0.01455, 0.01412, 0.01368, 0.01324, 0.01281, 0.01237, 0.01193, 0.01149, 0.01106, 0.01062, 0.01018, 0.00975, 0.00931, 0.00887, 0.00844, 0.00800 },
	{ 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01678, 0.01632, 0.01586, 0.01539, 0.01493, 0.01447, 0.01401, 0.01355, 0.01308, 0.01262, 0.01216, 0.01170, 0.01123, 0.01077, 0.01031, 0.00985, 0.00939, 0.00892, 0.00846, 0.00800 },
	{ 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01726, 0.01677, 0.01629, 0.01580, 0.01531, 0.01482, 0.01434, 0.01385, 0.01336, 0.01287, 0.01239, 0.01190, 0.01141, 0.01092, 0.01044, 0.00995, 0.00946, 0.00897, 0.00849, 0.00800 },
	{ 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01774, 0.01723, 0.01671, 0.01620, 0.01569, 0.01518, 0.01466, 0.01415, 0.01364, 0.01313, 0.01261, 0.01210, 0.01159, 0.01108, 0.01056, 0.01005, 0.00954, 0.00903, 0.00851, 0.00800 },
	{ 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01822, 0.01768, 0.01714, 0.01661, 0.01607, 0.01553, 0.01499, 0.01445, 0.01392, 0.01338, 0.01284, 0.01230, 0.01177, 0.01123, 0.01069, 0.01015, 0.00961, 0.00908, 0.00854, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01814, 0.01757, 0.01701, 0.01645, 0.01588, 0.01532, 0.01476, 0.01419, 0.01363, 0.01307, 0.01251, 0.01194, 0.01138, 0.01082, 0.01025, 0.00969, 0.00913, 0.00856, 0.00800 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01812, 0.01753, 0.01695, 0.01636, 0.01578, 0.01519, 0.01461, 0.01403, 0.01344, 0.01286, 0.01227, 0.01169, 0.01111, 0.01052, 0.00994, 0.00935, 0.00877, 0.00818, 0.00760 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01809, 0.01749, 0.01688, 0.01628, 0.01567, 0.01507, 0.01446, 0.01386, 0.01325, 0.01265, 0.01204, 0.01144, 0.01083, 0.01023, 0.00962, 0.00902, 0.00841, 0.00781, 0.00720 },
	{ 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01870, 0.01807, 0.01745, 0.01682, 0.01619, 0.01557, 0.01494, 0.01432, 0.01369, 0.01306, 0.01244, 0.01181, 0.01118, 0.01056, 0.00993, 0.00931, 0.00868, 0.00805, 0.00743, 0.00680 },
	{ 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01696, 0.01640, 0.01585, 0.01529, 0.01474, 0.01418, 0.01363, 0.01307, 0.01251, 0.01196, 0.01140, 0.01085, 0.01029, 0.00973, 0.00918, 0.00862, 0.00807, 0.00751, 0.00696, 0.00640 },
	{ 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01522, 0.01473, 0.01425, 0.01376, 0.01328, 0.01279, 0.01231, 0.01182, 0.01134, 0.01085, 0.01037, 0.00988, 0.00940, 0.00891, 0.00843, 0.00794, 0.00746, 0.00697, 0.00649, 0.00600 },
	{ 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01348, 0.01307, 0.01265, 0.01224, 0.01182, 0.01141, 0.01099, 0.01058, 0.01016, 0.00975, 0.00933, 0.00892, 0.00850, 0.00809, 0.00767, 0.00726, 0.00684, 0.00643, 0.00601, 0.00560 },
	{ 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01174, 0.01140, 0.01105, 0.01071, 0.01036, 0.01002, 0.00967, 0.00933, 0.00899, 0.00864, 0.00830, 0.00795, 0.00761, 0.00727, 0.00692, 0.00658, 0.00623, 0.00589, 0.00554, 0.00520 },
	{ 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.01000, 0.00973, 0.00945, 0.00918, 0.00891, 0.00863, 0.00836, 0.00808, 0.00781, 0.00754, 0.00726, 0.00699, 0.00672, 0.00644, 0.00617, 0.00589, 0.00562, 0.00535, 0.00507, 0.00480 },
	{ 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00800, 0.00781, 0.00762, 0.00743, 0.00724, 0.00705, 0.00686, 0.00667, 0.00648, 0.00629, 0.00611, 0.00592, 0.00573, 0.00554, 0.00535, 0.00516, 0.00497, 0.00478, 0.00459, 0.00440 },
	{ 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00600, 0.00589, 0.00579, 0.00568, 0.00558, 0.00547, 0.00537, 0.00526, 0.00516, 0.00505, 0.00495, 0.00484, 0.00474, 0.00463, 0.00453, 0.00442, 0.00432, 0.00421, 0.00411, 0.00400 },
	{ 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00400, 0.00399, 0.00398, 0.00397, 0.00396, 0.00395, 0.00394, 0.00393, 0.00392, 0.00391, 0.00389, 0.00388, 0.00387, 0.00386, 0.00385, 0.00384, 0.00383, 0.00382, 0.00381, 0.00380 },
	{ 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00200, 0.00208, 0.00217, 0.00225, 0.00234, 0.00242, 0.00251, 0.00259, 0.00267, 0.00276, 0.00284, 0.00293, 0.00301, 0.00309, 0.00318, 0.00326, 0.00335, 0.00343, 0.00352, 0.00360 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00018, 0.00036, 0.00054, 0.00072, 0.00089, 0.00107, 0.00125, 0.00143, 0.00161, 0.00179, 0.00197, 0.00215, 0.00233, 0.00251, 0.00268, 0.00286, 0.00304, 0.00322, 0.00340 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00017, 0.00034, 0.00051, 0.00067, 0.00084, 0.00101, 0.00118, 0.00135, 0.00152, 0.00168, 0.00185, 0.00202, 0.00219, 0.00236, 0.00253, 0.00269, 0.00286, 0.00303, 0.00320 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00016, 0.00032, 0.00047, 0.00063, 0.00079, 0.00095, 0.00111, 0.00126, 0.00142, 0.00158, 0.00174, 0.00189, 0.00205, 0.00221, 0.00237, 0.00253, 0.00268, 0.00284, 0.00300 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00015, 0.00029, 0.00044, 0.00058, 0.00073, 0.00087, 0.00102, 0.00117, 0.00131, 0.00146, 0.00160, 0.00175, 0.00189, 0.00204, 0.00219, 0.00233, 0.00248, 0.00262, 0.00277 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00013, 0.00027, 0.00040, 0.00053, 0.00067, 0.00080, 0.00094, 0.00107, 0.00120, 0.00134, 0.00147, 0.00160, 0.00174, 0.00187, 0.00200, 0.00214, 0.00227, 0.00240, 0.00254 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00012, 0.00024, 0.00036, 0.00049, 0.00061, 0.00073, 0.00085, 0.00097, 0.00109, 0.00121, 0.00134, 0.00146, 0.00158, 0.00170, 0.00182, 0.00194, 0.00207, 0.00219, 0.00231 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00011, 0.00022, 0.00033, 0.00044, 0.00055, 0.00066, 0.00077, 0.00087, 0.00098, 0.00109, 0.00120, 0.00131, 0.00142, 0.00153, 0.00164, 0.00175, 0.00186, 0.00197, 0.00208 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00010, 0.00019, 0.00029, 0.00039, 0.00049, 0.00058, 0.00068, 0.00078, 0.00087, 0.00097, 0.00107, 0.00117, 0.00126, 0.00136, 0.00146, 0.00155, 0.00165, 0.00175, 0.00185 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00008, 0.00017, 0.00026, 0.00034, 0.00042, 0.00051, 0.00060, 0.00068, 0.00076, 0.00085, 0.00094, 0.00102, 0.00111, 0.00119, 0.00128, 0.00136, 0.00144, 0.00153, 0.00162 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00007, 0.00015, 0.00022, 0.00029, 0.00036, 0.00044, 0.00051, 0.00058, 0.00066, 0.00073, 0.00080, 0.00087, 0.00095, 0.00102, 0.00109, 0.00117, 0.00124, 0.00131, 0.00139 },
	{ 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000 } } };



class mbase {

public:
	// Type define
	enum defDisc {interestOnly,interestAndMortalityX,interestAndMortalityY,
				  interestAndMortalityXY};
	enum mortalityType {unprojected, staticProjection, generational, generational2D};
    enum mTableList {unassigned, GAM83, UP94, GAM94, RP2000B, RP2000W, RP2000C, CPMComb, CPMPriv, CPMPub, CPMBCB, LAPP, UserDefined=99};

	// Constructors
	mbase();
	mbase(char *mtable, errorFlag &Error);
	mbase(PString mtable, errorFlag &Error);
	mbase(const mbase &mtable);

	// Destructor
	~mbase();

	// Assignment operator
	mbase& operator=(const mbase &rhs);

	// Methods
	double getDuration() const;
	mbase::defDisc getDiscountOnDeferral() const;
	mbase::mortalityType getMortalityType() const;
	mbase::mTableList getTable() const;
	PString getTableName() const;
	PString getTableDesc() const;
	unsigned int getBaseYear() const;
	double getProjYear() const;
	unsigned int getCalcYear() const;
	void setGenInputs(const date &dob, const date &doc, errorFlag &Error);

protected:
	double durn;			// Duration of stream in years
	double msex;			// 1=Male, 2=Female, 0 to 1=Unisex
	double age;				// Age at calculation date
	unsigned int ageFirst;	// First age of mortality table
	unsigned int ageLast;	// Last age of mortality table
	unsigned int fAge;		// First age where Qx required
	unsigned int lAge;		// Last age where Qx required
	unsigned int baseYear;	// Base year for mortality table
	unsigned int calcYear;  // Calculation year for use with two-dimensional tables
	enum mTableList table;
	enum defDisc discountOnDeferral;
	enum mortalityType mortType;

	double TTBD;			// Time to birthday (i.e. Jan 1 to birthday)
	double projYear;		// Projection year for mortality table

	void validateDuration(const double duration, errorFlag &Error) const;
	void setDuration(const double duration);
	void setProjYear(const double projYear, errorFlag &Error);
	void setCalcYear(const unsigned int calcyear, errorFlag &Error);
	void validateMTable(const PString &mtable, errorFlag &Error);
	void setMTable(const mTableList table, errorFlag &Error);
	void setUDMTable(const sex &UDsex, errorFlag &Error);
	void validateAge(errorFlag &Error) const;
	void loadMortRates(errorFlag &Error);
    PVector<long double> *pbaseRates;
    PVector<long double> *pUDBaseRates;

	int match(const char *t1, const char *t2);

};

mbase::mbase() : durn(0), msex(0), age(0), table(UP94), 
    discountOnDeferral(interestOnly), pbaseRates(nullptr), pUDBaseRates(nullptr),
	mortType(unprojected), TTBD(0), projYear(0), calcYear(0)
{
	errorFlag tempError;
	setMTable(table, tempError);
}

mbase::mbase(char *mtable, errorFlag &Error) : durn(0), msex(0), age(0), TTBD(0),
discountOnDeferral(interestOnly), pbaseRates(nullptr), pUDBaseRates(nullptr), projYear(0), calcYear(0)
{
	PString Mtable(mtable);
	validateMTable(Mtable,Error);
	if (!Error)
		setMTable(table, Error);
}

mbase::mbase(PString mtable, errorFlag &Error) : durn(0), msex(0), age(0), TTBD(0),
discountOnDeferral(interestOnly), pbaseRates(nullptr), pUDBaseRates(nullptr), projYear(0), calcYear(0)
{
	validateMTable(mtable,Error);
	if (!Error)
		setMTable(table, Error);
}

mbase::mbase(const mbase &rhs) : pbaseRates(nullptr), pUDBaseRates(nullptr)
{
	durn = rhs.durn;
	msex = rhs.msex;
	age = rhs.age;
	ageFirst = rhs.ageFirst;
	ageLast = rhs.ageLast;
	fAge = rhs.fAge;
	lAge = rhs.lAge;
	table = rhs.table;
	discountOnDeferral = rhs.discountOnDeferral;
	mortType = rhs.mortType;
	baseYear = rhs.baseYear;
	calcYear = rhs.calcYear;
	projYear = rhs.projYear;
	TTBD = rhs.TTBD;
}

mbase::~mbase()
{
delete pbaseRates;
pbaseRates = nullptr;
delete pUDBaseRates;
pUDBaseRates = nullptr;
}

void mbase::validateDuration(const double duration, errorFlag &Error) const
{
	if (duration < 0)
		Error = 10; // Period cannot be < 0;
}

void mbase::setDuration(const double duration)
{
    if (static_cast<int>(duration) == 999)
		durn = ageLast + 1 - age;
	else
		durn = (duration < ageLast + 1 - age) ? duration : ageLast + 1 - age;
}

void mbase::setCalcYear(const unsigned int calcyear, errorFlag &Error)
{
	if (calcyear < 2000)
		Error = 51; // Year cannot be less than 2000
	else
		calcYear = calcyear;
}

void mbase::setProjYear(const double projyear, errorFlag &Error)
{
	if (projyear < baseYear)
		Error = 52; // Projection year cannot be less than base year
	else
		projYear = projyear;
}

mbase& mbase::operator=(const mbase &rhs)
{
	if (this == &rhs) return *this;

	durn = rhs.durn;
	msex = rhs.msex;
	age = rhs.age;
	ageFirst = rhs.ageFirst;
	ageLast = rhs.ageLast;
	fAge = rhs.fAge;
	lAge = rhs.lAge;
	table = rhs.table;
	discountOnDeferral = rhs.discountOnDeferral;
	mortType = rhs.mortType;
	baseYear = rhs.baseYear;
	calcYear = rhs.calcYear;
	projYear = rhs.projYear;
	TTBD = rhs.TTBD;
	return *this;
}

double mbase::getDuration() const
{
	return durn;
}

unsigned int mbase::getBaseYear() const
{
	return baseYear;
}

unsigned int mbase::getCalcYear() const
{
	return calcYear;
}

double mbase::getProjYear() const
{
	return projYear;
}

void mbase::setGenInputs(const date &dob, const date &doc, errorFlag &Error)
{
	if ((doc.numericValue() == 0) || (dob.numericValue() > doc.numericValue()))
	{
		Error = 38;  // Invalid generational mortality date
		return;
	}
	calcYear = doc.year();
	if (calcYear < 2000)
	{
		Error = 51; // Year cannot be less than 2000
		return;
	}
	TTBD = elapse(date(dob.year(),1,1,Error), dob, Error);
	if (Error)
		return;
	projYear = TTBD * (doc.year()+1) + (1-TTBD) * doc.year();
}

void mbase::validateMTable(const PString &mtable, errorFlag &Error)
{
	PString mtemp, tableName;
	mtemp = mtable.upper();
	unsigned int length=0;
	unsigned int discountFlagSet = 0;
	discountOnDeferral = interestOnly;
	table = unassigned;

	// Check for special case of CPM (since it starts with "C")

	if ((mtemp[0] == 'C') && ((mtemp.middle(1,3).isMatch(_T("CPM"))) || !mtemp.left(3).isMatch(_T("CPM"))))
	{
		discountOnDeferral = interestOnly;
		discountFlagSet = 1;
		mtemp.dropLeft(1);
    }
	if (mtemp[0] == 'D')
	{
		discountOnDeferral = interestAndMortalityX;
		discountFlagSet = 1;
		mtemp.dropLeft(1);
    }
	if (mtemp[0] == 'Y')
	{
		discountOnDeferral = interestAndMortalityY;
		discountFlagSet = 1;
		mtemp.dropLeft(1);
    }
	if (mtemp[0] == 'J')
	{
		discountOnDeferral = interestAndMortalityXY;
		discountFlagSet = 1;
		mtemp.dropLeft(1);
    }
	length = mtemp.getLength();
	if ((length == 0) && discountFlagSet)
	{
        if (static_cast<int>(msex) != 99)
			table = UP94;
		else
			table = UserDefined;
		return;
	}
	if (length < 4)
	{
		Error = 30; // Invalid mortality table
		return;
	}
	tableName = mtemp.left(4);
/*	if (tableName.isMatch(_T("GM71")))
        table=GAM71;*/
	if (tableName.isMatch(_T("GM83")))
        table=GAM83;
	if (tableName.isMatch(_T("UP94")))
		table=UP94;
	if (tableName.isMatch(_T("GA94")))
		table=GAM94;
	if (tableName.isMatch(_T("RP0B")))
		table=RP2000B;
	if (tableName.isMatch(_T("RP0W")))
		table=RP2000W;
	if (tableName.isMatch(_T("RP0C")))
		table=RP2000C;
	if (tableName.isMatch(_T("CPMC")))
		table = CPMComb;
	if (tableName.isMatch(_T("CPMI")))
		table = CPMPriv;
	if (tableName.isMatch(_T("CPMU")))
		table = CPMPub;
	if (tableName.isMatch(_T("CPMB")))
		table = CPMBCB;
	if (tableName.isMatch(_T("LAPP")))
		table = LAPP;

	// if no match by here, invalid table
	if (table == unassigned)
	{
        Error = 30; // Invalid mortality table
		return;
	}

	// Check for mortality projection parameters
	mtemp.dropLeft(4);
	if (mtemp.getLength() == 0)
	{
		mortType = unprojected;
		return;
	}
	if ((mtemp.getLength() == 1) && (mtemp.isMatch(_T("G"))))
	{
		mortType = generational;
		return;
	}
	if ((mtemp.getLength() == 3) && (mtemp.isMatch(_T("G2D"))))
	{
		mortType = generational2D;
		return;
	}
    projYear = static_cast<double>(mtemp.asNumber());
	if ((mtemp.getLength() == 4) && (projYear >= 1900))
		mortType = staticProjection;
	else
	{
		Error = 33; // Invalid mortality projection
		return;
	}
}

void mbase::setMTable(const mTableList table, errorFlag &Error)
{
	switch (table)
		{
/*		case GAM71:
			ageFirst=5;
			ageLast=110;
			baseYear=1971;
            break;*/
		case GAM83:
			ageFirst=5;
			ageLast=110;
			baseYear=1983;
            break;
		case UP94:
			ageFirst=0;
			ageLast=110;
			baseYear=1994;
			break;
		case GAM94:
			ageFirst=15;
			ageLast=110;
			baseYear=1994;
			break;
		case RP2000B:
		case RP2000W:
		case RP2000C:
			ageFirst=0;
			ageLast=120;
			baseYear=2000;
			break;
		case CPMComb:
		case CPMPriv:
		case CPMPub:
		case CPMBCB:
			ageFirst = 18;
			ageLast = 115;
			baseYear = 2014;
			break;
		case LAPP:
			ageFirst = 18;
			ageLast = 115;
			baseYear = 2000;
			break;
		default:
			Error = 30; // Invalid mortality table
			break;
		}
}

void mbase::setUDMTable(const sex &xsex, errorFlag &Error)
{
    PVector <long double> udLx = xsex.getUserDefinedLx();
	unsigned int tableSize = (unsigned int)udLx.getSize()-1;
	if (udLx[tableSize] != 0)
	{
		Error = 31; // Final Qx in user defined table <> 1;
		return;
	}
    pUDBaseRates = new PVector<long double>(tableSize);
	assert (pUDBaseRates != 0);
	for (unsigned int i = 0; i < tableSize; i++)
		(*pUDBaseRates)[i] = 1 - udLx[i+1] / udLx[i];
	if ((pUDBaseRates->maxValue() > 1) || (pUDBaseRates->minValue() < 0))
	{
		Error = 32; // Invalid user defined mortality table;
		return;
	}
	ageLast = tableSize - 1;
	ageFirst = 0;
	while (((*pUDBaseRates)[ageFirst] == 0) && (ageFirst <= ageLast))
		ageFirst++;
}

void mbase::validateAge(errorFlag &Error) const
{
	if (age < ageFirst)
		{
		Error = 35; // Age less than minimum for table
		return;
		}
	if (age > ageLast)
		Error = 36; // Age greater than maximum for table
}

void mbase::loadMortRates(errorFlag &Error)
{
    Q_UNUSED(Error);

    fAge = (int)age;
    lAge = ((age+durn) > ageLast) ? ageLast : (int)(age+durn);

    pbaseRates = new PVector<long double>(lAge-fAge+1);
    assert (pbaseRates != 0);
    long double cumImproveM, cumImproveF, view;
    unsigned int i, j, index;

    if (msex != 99)
    {
    for (index=0; index<=(lAge-fAge); index++)
            {
                    switch (mortType)
                    {
                    case unprojected:
                            switch ((int)msex)
                            {
                            case 1:		// Male
                                    (*pbaseRates)[index] = mortalityRates[(table-1)*2][fAge+index];
                                    break;
                            case 2:		// Female
                                    (*pbaseRates)[index] = mortalityRates[(table-1)*2+1][fAge+index];
                                    break;
                            default:	// Unisex
                                    (*pbaseRates)[index] = mortalityRates[(table-1)*2][fAge+index] * msex
                                                                    + mortalityRates[(table-1)*2+1][fAge+index] * (1-msex);
                                    (*pbaseRates)[index] = (long double)(.000001 *
                                                                            (long int)((*pbaseRates)[index] * 1000000 + 0.5));
                            }
                            break;
                    case staticProjection:
                            switch ((int)msex)
                            {
                            case 1:		// Male
                                    if (mortalityRates[(table-1)*2][fAge+index] < 1)
                                            (*pbaseRates)[index] = mortalityRates[(table-1)*2][fAge+index] *
                                                       powl(1-projScales[0][fAge+index], projYear-baseYear);
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                                    break;
                            case 2:		// Female
                                    if (mortalityRates[(table-1)*2+1][fAge+index] < 1)
                                            (*pbaseRates)[index] = mortalityRates[(table-1)*2+1][fAge+index] *
                                                       powl(1-projScales[1][fAge+index], projYear-baseYear);
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                                    break;
                            default:	// Unisex
                                    if (mortalityRates[(table-1)*2][fAge+index] < 1)
                                            (*pbaseRates)[index] = mortalityRates[(table-1)*2][fAge+index] *
                                                    msex * powl(1-projScales[0][fAge+index], projYear-baseYear) +
                                                    mortalityRates[(table-1)*2+1][fAge+index] * (1-msex) *
                                                    powl(1-projScales[1][fAge+index], projYear-baseYear);
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                            }
                            (*pbaseRates)[index] = (long double)(.000001 *
                                                                            (long int)((*pbaseRates)[index] * 1000000 + 0.5));
                            break;

                    case generational:
                            switch ((int)msex)
                            {
                            case 1:		// Male
                                    if (mortalityRates[(table-1)*2][fAge+index] < 1)
                                            (*pbaseRates)[index] = mortalityRates[(table-1)*2][fAge+index] *
                                                       powl(1-projScales[0][fAge+index], projYear-baseYear+index);
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                                    break;
                            case 2:		// Female
                                    if (mortalityRates[(table-1)*2+1][fAge+index] < 1)
                                            (*pbaseRates)[index] = mortalityRates[(table-1)*2+1][fAge+index] *
                                                       powl(1-projScales[1][fAge+index], projYear-baseYear+index);
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                                    break;
                            default:	// Unisex
                                    if (mortalityRates[(table-1)*2][fAge+index] < 1)
                                            (*pbaseRates)[index] = mortalityRates[(table-1)*2][fAge+index] *
                                                    msex * powl(1-projScales[0][fAge+index], projYear-baseYear+index)
                                                    + mortalityRates[(table-1)*2+1][fAge+index] * (1-msex) *
                                                    powl(1-projScales[1][fAge+index], projYear-baseYear+index);
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                            }
                            (*pbaseRates)[index] = (long double)(.000001 *
                                                                            (long int)((*pbaseRates)[index] * 1000000 + 0.5));
                            break;

                    case generational2D:
                            cumImproveM = 1.0000;
                            cumImproveF = 1.0000;
                            j = 0;
                            switch ((int)msex)
                            {
                            case 1:		// Male
                                    // Project backwards for calculation dates prior to 2014
                                    for (i = calcYear; i < baseYear; i++)
                                    {
                                            j = i - 1999;
                                            cumImproveM /= (1 - projScales2D[0][fAge + index][j]);
                                    }
                                    // Project forwards to applicable year
                                    for (i = baseYear; i < (calcYear + index); i++)
                                    {
                                            j = ((i < 2030) ? i : 2029) - 1999;
                                            cumImproveM *= (1 - projScales2D[0][fAge + index][j]);
                                    }
                                    if (mortalityRates[(table - 1) * 2][fAge + index] < 1)
                                    {
                                            if (i < 2030)
                                                    j++;
                                            (*pbaseRates)[index] = mortalityRates[(table - 1) * 2][fAge + index] * cumImproveM *
                                                    (1 - TTBD * projScales2D[0][fAge + index][j]);
                                    }
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                                    break;
                            case 2:		// Female
                                    // Project backwards for calculation dates prior to 2014
                                    for (i = calcYear; i < baseYear; i++)
                                    {
                                            j = i - 1999;
                                            cumImproveF /= (1 - projScales2D[1][fAge + index][j]);
                                    }
                                    // Project forwards to applicable year
                                    for (i = baseYear; i < (calcYear + index); i++)
                                    {
                                            j = ((i < 2030) ? i : 2029) - 1999;
                                            cumImproveF *= (1 - projScales2D[1][fAge + index][j]);
                                    }
                                    if (mortalityRates[(table - 1) * 2 + 1][fAge + index] < 1)
                                    {
                                            if (i < 2030)
                                                    j++;
                                            (*pbaseRates)[index] = mortalityRates[(table - 1) * 2 + 1][fAge + index] * cumImproveF *
                                                    (1 - TTBD * projScales2D[1][fAge + index][j]);
                                    }
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                                    break;
                            default:	// Unisex
                                    // Project backwards for calculation dates prior to 2014
                                    for (i = calcYear; i < baseYear; i++)
                                    {
                                            j = i - 1999;
                                            cumImproveM /= (1 - projScales2D[0][fAge + index][j]);
                                            cumImproveF /= (1 - projScales2D[1][fAge + index][j]);
                                    }
                                    // Project forwards to applicable year
                                    for (i = baseYear; i < (calcYear + index); i++)
                                    {
                                            j = ((i < 2030) ? i : 2029) - 1999;
                                            cumImproveM *= (1 - projScales2D[0][fAge + index][j]);
                                            cumImproveF *= (1 - projScales2D[1][fAge + index][j]);
                                    }
                                    if (mortalityRates[(table - 1) * 2][fAge + index] < 1)
                                    {
                                            if (i < 2030)
                                                    j++;
                                            (*pbaseRates)[index] = mortalityRates[(table - 1) * 2][fAge + index] * cumImproveM * msex
                                                    * (1 - TTBD * projScales2D[0][fAge + index][j])
                                                    + mortalityRates[(table - 1) * 2 + 1][fAge + index] * cumImproveF * (1 - msex)
                                                    * (1 - TTBD * projScales2D[1][fAge + index][j]);
                                    }
                                    else
                                            (*pbaseRates)[index] = 1.000000;
                            }
                            (*pbaseRates)[index] = (long double)(.000001 *
                                    (long int)((*pbaseRates)[index] * 1000000 + 0.5));
                            break;
                    }
                    view = (*pbaseRates)[index];
            }
    }
    else
    {
            for (unsigned int index=0; index<=(lAge-fAge); index++)
                            (*pbaseRates)[index] = (*pUDBaseRates)[fAge+index];
    }
}

mbase::defDisc mbase::getDiscountOnDeferral() const
{
	return discountOnDeferral;
}

mbase::mortalityType mbase::getMortalityType() const
{
	return mortType;
}

mbase::mTableList mbase::getTable() const
{
	return table;
}

PString mbase::getTableName() const
{
	PString result;
    PString mortTableDesc[11];
	
    mortTableDesc[0] = _T("GAM83");
    mortTableDesc[1] = _T("UP94");
    mortTableDesc[2] = _T("GA94");
    mortTableDesc[3] = _T("RP2000 Blue Collar");
    mortTableDesc[4] = _T("RP2000 White Collar");
    mortTableDesc[5] = _T("RP2000 Combined");
    mortTableDesc[6] = _T("CPM Combined");
    mortTableDesc[7] = _T("CPM Private");
    mortTableDesc[8] = _T("CPM Public");
    mortTableDesc[9] = _T("CPM Blue Collar Blend");
    mortTableDesc[10] = _T("LAPP CPM Customized");


	result = mortTableDesc[this->getTable()-1];
	
	return result;
}

PString mbase::getTableDesc() const
{
	PString result;

	result = this->getTableName();

	switch (this->getMortalityType())
	{
	case mbase::unprojected:
		// Do nothing
		break;

	case mbase::staticProjection:
		result += _T(" projected to year ");
		//result += ConvertNumberToString(this->getProjYear(), 0, NO_FORMAT);
		result += ConvertNumberToString(this->getProjYear(), 0, 0);
		result += _T(" using Scale AA");
		break;

	case mbase::generational:
		result += _T(" - generational");
		result += _T(" using Scale AA");
		break;

	case mbase::generational2D:
		result += _T(" - generational");
		result += _T(" using CPM-B");
		break;
	}
	
	return result;
}

int mbase::match(const char *t1, const char *t2)
{
	while (*t1 != '\0')
		{
		if (*t1++ != *t2++) return 0;
		}
	return 1;
}

#endif
